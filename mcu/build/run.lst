ARM GAS  /tmp/cc8IlFAo.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"run.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "run.cpp"
  19              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  20              		.align	1
  21              		.p2align 2,,3
  22              		.weak	_ZN5daisy9DaisySeedD2Ev
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	_ZN5daisy9DaisySeedD2Ev:
  28              	.LVL0:
  29              	.LFB2332:
  30              		.file 2 "../../DaisyExamples/libDaisy//src/daisy_seed.h"
   1:../../DaisyExamples/libDaisy//src/daisy_seed.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../DaisyExamples/libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   5:../../DaisyExamples/libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   7:../../DaisyExamples/libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../DaisyExamples/libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  10:../../DaisyExamples/libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  12:../../DaisyExamples/libDaisy//src/daisy_seed.h **** /**
  13:../../DaisyExamples/libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  16:../../DaisyExamples/libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../DaisyExamples/libDaisy//src/daisy_seed.h **** */
  18:../../DaisyExamples/libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  20:../../DaisyExamples/libDaisy//src/daisy_seed.h ****   public:
  21:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  31              		.loc 2 22 5 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.LBB88:
ARM GAS  /tmp/cc8IlFAo.s 			page 2


  37              	.LBI88:
  38              		.file 3 "../../DaisyExamples/libDaisy//src/sys/system.h"
   1:../../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../DaisyExamples/libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../DaisyExamples/libDaisy//src/sys/system.h **** 
   4:../../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../DaisyExamples/libDaisy//src/sys/system.h **** 
   6:../../DaisyExamples/libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../DaisyExamples/libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../DaisyExamples/libDaisy//src/sys/system.h **** 
   9:../../DaisyExamples/libDaisy//src/sys/system.h **** namespace daisy
  10:../../DaisyExamples/libDaisy//src/sys/system.h **** {
  11:../../DaisyExamples/libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../DaisyExamples/libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../DaisyExamples/libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../DaisyExamples/libDaisy//src/sys/system.h ****  **
  15:../../DaisyExamples/libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../DaisyExamples/libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../DaisyExamples/libDaisy//src/sys/system.h ****  */
  18:../../DaisyExamples/libDaisy//src/sys/system.h **** class System
  19:../../DaisyExamples/libDaisy//src/sys/system.h **** {
  20:../../DaisyExamples/libDaisy//src/sys/system.h ****   public:
  21:../../DaisyExamples/libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../DaisyExamples/libDaisy//src/sys/system.h ****     struct Config
  23:../../DaisyExamples/libDaisy//src/sys/system.h ****     {
  24:../../DaisyExamples/libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../DaisyExamples/libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../DaisyExamples/libDaisy//src/sys/system.h ****         {
  27:../../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../DaisyExamples/libDaisy//src/sys/system.h ****         };
  30:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  31:../../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  35:../../DaisyExamples/libDaisy//src/sys/system.h ****         void Defaults()
  36:../../DaisyExamples/libDaisy//src/sys/system.h ****         {
  37:../../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../DaisyExamples/libDaisy//src/sys/system.h ****         }
  42:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  43:../../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  47:../../DaisyExamples/libDaisy//src/sys/system.h ****         void Boost()
  48:../../DaisyExamples/libDaisy//src/sys/system.h ****         {
  49:../../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../DaisyExamples/libDaisy//src/sys/system.h ****         }
  54:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  55:../../DaisyExamples/libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
ARM GAS  /tmp/cc8IlFAo.s 			page 3


  56:../../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../DaisyExamples/libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../DaisyExamples/libDaisy//src/sys/system.h ****     };
  60:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  61:../../DaisyExamples/libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../DaisyExamples/libDaisy//src/sys/system.h ****      * 
  63:../../DaisyExamples/libDaisy//src/sys/system.h ****      */
  64:../../DaisyExamples/libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../DaisyExamples/libDaisy//src/sys/system.h ****     {
  66:../../DaisyExamples/libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../DaisyExamples/libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../DaisyExamples/libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../DaisyExamples/libDaisy//src/sys/system.h ****         SDRAM,
  73:../../DaisyExamples/libDaisy//src/sys/system.h ****         QSPI,
  74:../../DaisyExamples/libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../DaisyExamples/libDaisy//src/sys/system.h ****     };
  76:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  77:../../DaisyExamples/libDaisy//src/sys/system.h ****     System() {}
  78:../../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
  39              		.loc 3 78 5 view .LVU1
  40              		.loc 3 78 5 is_stmt 0 view .LVU2
  41              	.LBE88:
  42              	.LBB89:
  43              	.LBI89:
  44              		.file 4 "../../DaisyExamples/libDaisy//src/hid/usb.h"
   1:../../DaisyExamples/libDaisy//src/hid/usb.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../DaisyExamples/libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
   7:../../DaisyExamples/libDaisy//src/hid/usb.h **** namespace daisy
   8:../../DaisyExamples/libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../DaisyExamples/libDaisy//src/hid/usb.h ****     @{
  10:../../DaisyExamples/libDaisy//src/hid/usb.h **** */
  11:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  12:../../DaisyExamples/libDaisy//src/hid/usb.h **** {
  13:../../DaisyExamples/libDaisy//src/hid/usb.h **** /** 
  14:../../DaisyExamples/libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../DaisyExamples/libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../DaisyExamples/libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../DaisyExamples/libDaisy//src/hid/usb.h **** */
  18:../../DaisyExamples/libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../DaisyExamples/libDaisy//src/hid/usb.h **** {
  20:../../DaisyExamples/libDaisy//src/hid/usb.h ****   public:
  21:../../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../DaisyExamples/libDaisy//src/hid/usb.h ****     enum class Result
  23:../../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  24:../../DaisyExamples/libDaisy//src/hid/usb.h ****         OK,
  25:../../DaisyExamples/libDaisy//src/hid/usb.h ****         ERR,
  26:../../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  27:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  28:../../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
ARM GAS  /tmp/cc8IlFAo.s 			page 4


  29:../../DaisyExamples/libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  31:../../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  35:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  36:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  37:../../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../DaisyExamples/libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  40:../../DaisyExamples/libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  42:../../DaisyExamples/libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  45              		.loc 4 42 5 is_stmt 1 view .LVU3
  46              		.loc 4 42 5 is_stmt 0 view .LVU4
  47              	.LBE89:
  48              	.LBB90:
  49              	.LBI90:
  50              		.file 5 "../../DaisyExamples/libDaisy//src/per/adc.h"
   1:../../DaisyExamples/libDaisy//src/per/adc.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../DaisyExamples/libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../DaisyExamples/libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../DaisyExamples/libDaisy//src/per/adc.h **** 
   9:../../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  11:../../DaisyExamples/libDaisy//src/per/adc.h **** namespace daisy
  12:../../DaisyExamples/libDaisy//src/per/adc.h **** {
  13:../../DaisyExamples/libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../DaisyExamples/libDaisy//src/per/adc.h ****     @{
  15:../../DaisyExamples/libDaisy//src/per/adc.h **** */
  16:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  17:../../DaisyExamples/libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../DaisyExamples/libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../DaisyExamples/libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../DaisyExamples/libDaisy//src/per/adc.h **** */
  21:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  22:../../DaisyExamples/libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../DaisyExamples/libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           one channel.
  26:../../DaisyExamples/libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../DaisyExamples/libDaisy//src/per/adc.h **** */
  31:../../DaisyExamples/libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../DaisyExamples/libDaisy//src/per/adc.h **** {
  33:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../DaisyExamples/libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../DaisyExamples/libDaisy//src/per/adc.h ****     {
  36:../../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
ARM GAS  /tmp/cc8IlFAo.s 			page 5


  38:../../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../DaisyExamples/libDaisy//src/per/adc.h ****     };
  41:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  42:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../DaisyExamples/libDaisy//src/per/adc.h ****      */
  45:../../DaisyExamples/libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  47:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** 
  48:../../DaisyExamples/libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../DaisyExamples/libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../DaisyExamples/libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../DaisyExamples/libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../DaisyExamples/libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../DaisyExamples/libDaisy//src/per/adc.h ****     */
  59:../../DaisyExamples/libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../DaisyExamples/libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  65:../../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../DaisyExamples/libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../DaisyExamples/libDaisy//src/per/adc.h **** };
  69:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  70:../../DaisyExamples/libDaisy//src/per/adc.h **** /**
  71:../../DaisyExamples/libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../DaisyExamples/libDaisy//src/per/adc.h **** */
  73:../../DaisyExamples/libDaisy//src/per/adc.h **** class AdcHandle
  74:../../DaisyExamples/libDaisy//src/per/adc.h **** {
  75:../../DaisyExamples/libDaisy//src/per/adc.h ****   public:
  76:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../DaisyExamples/libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../DaisyExamples/libDaisy//src/per/adc.h ****     {
  79:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../DaisyExamples/libDaisy//src/per/adc.h ****     };
  91:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  92:../../DaisyExamples/libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  51              		.loc 5 93 5 is_stmt 1 view .LVU5
ARM GAS  /tmp/cc8IlFAo.s 			page 6


  52              		.loc 5 93 5 is_stmt 0 view .LVU6
  53              	.LBE90:
  54              	.LBB91:
  55              	.LBI91:
  56              		.file 6 "../../DaisyExamples/libDaisy//src/hid/audio.h"
   1:../../DaisyExamples/libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../DaisyExamples/libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
   4:../../DaisyExamples/libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
   6:../../DaisyExamples/libDaisy//src/hid/audio.h **** namespace daisy
   7:../../DaisyExamples/libDaisy//src/hid/audio.h **** {
   8:../../DaisyExamples/libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../DaisyExamples/libDaisy//src/hid/audio.h ****  */
  22:../../DaisyExamples/libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../DaisyExamples/libDaisy//src/hid/audio.h **** {
  24:../../DaisyExamples/libDaisy//src/hid/audio.h ****   public:
  25:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../DaisyExamples/libDaisy//src/hid/audio.h ****     struct Config
  28:../../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  29:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../DaisyExamples/libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  32:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../DaisyExamples/libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  35:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../DaisyExamples/libDaisy//src/hid/audio.h ****         float postgain;
  37:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  38:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../DaisyExamples/libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../DaisyExamples/libDaisy//src/hid/audio.h ****          */
  41:../../DaisyExamples/libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  43:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../DaisyExamples/libDaisy//src/hid/audio.h ****         Config()
  45:../../DaisyExamples/libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../DaisyExamples/libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../DaisyExamples/libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../DaisyExamples/libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../DaisyExamples/libDaisy//src/hid/audio.h ****         {
  50:../../DaisyExamples/libDaisy//src/hid/audio.h ****         }
  51:../../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  52:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
ARM GAS  /tmp/cc8IlFAo.s 			page 7


  53:../../DaisyExamples/libDaisy//src/hid/audio.h ****     enum class Result
  54:../../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  55:../../DaisyExamples/libDaisy//src/hid/audio.h ****         OK,
  56:../../DaisyExamples/libDaisy//src/hid/audio.h ****         ERR,
  57:../../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  58:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  59:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  63:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  65:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  68:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  70:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  73:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../DaisyExamples/libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../DaisyExamples/libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  77:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../DaisyExamples/libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  81:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  83:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  86:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  88:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  91:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../DaisyExamples/libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../DaisyExamples/libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  95:../../DaisyExamples/libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  57              		.loc 6 96 5 is_stmt 1 view .LVU7
  58              		.loc 6 96 5 is_stmt 0 view .LVU8
  59              	.LBE91:
  60              		.loc 2 22 19 view .LVU9
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE2332:
  65              		.weak	_ZN5daisy9DaisySeedD1Ev
  66              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  67 0002 00BF     		.section	.text._Z26calculate_sine_wave_lookupv,"ax",%progbits
  68              		.align	1
  69              		.p2align 2,,3
  70              		.global	_Z26calculate_sine_wave_lookupv
ARM GAS  /tmp/cc8IlFAo.s 			page 8


  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	_Z26calculate_sine_wave_lookupv:
  76              	.LFB4816:
   1:run.cpp       **** #include "daisy_seed.h"
   2:run.cpp       **** #include "daisysp.h"
   3:run.cpp       **** #include <string>
   4:run.cpp       **** #include <array>
   5:run.cpp       **** #include <math.h>
   6:run.cpp       **** 
   7:run.cpp       **** #define NUMBER_OF_VALUES 550
   8:run.cpp       **** #define SIN_POINTS 512
   9:run.cpp       **** #define TEST_MEMORY_SIZE (NUMBER_OF_VALUES * 16 * 3)
  10:run.cpp       **** 
  11:run.cpp       **** #define DAC_MAX 4095  // 12 bit
  12:run.cpp       **** 
  13:run.cpp       **** using namespace daisy;
  14:run.cpp       **** using namespace daisysp; 
  15:run.cpp       **** 
  16:run.cpp       **** DaisySeed hw;
  17:run.cpp       **** static size_t value_count = 0;
  18:run.cpp       **** // 16bit adc
  19:run.cpp       **** const float_t ADC_MAX = 0xFFFF;
  20:run.cpp       **** const float_t VEE = 3.3;
  21:run.cpp       **** const float_t R_1 = 1000;
  22:run.cpp       **** 
  23:run.cpp       **** static std::array<uint16_t, NUMBER_OF_VALUES> SINE_WAVE_LOOKUP;
  24:run.cpp       **** 
  25:run.cpp       **** void calculate_sine_wave_lookup(){
  77              		.loc 1 25 34 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  26:run.cpp       **** 	for (size_t i = 0; i < (SIN_POINTS - 1); i++)
  81              		.loc 1 26 2 view .LVU11
  82              	.LVL1:
  83              	.LBB92:
  84              		.loc 1 26 23 discriminator 1 view .LVU12
  85              	.LBB93:
  27:run.cpp       **** 	{
  28:run.cpp       **** 		// We only want the positive half wave
  29:run.cpp       **** 		float_t v = (DAC_MAX * sin((PI_F * i) / SIN_POINTS));
  86              		.loc 1 29 3 view .LVU13
  87              	.LBB94:
  88              	.LBI94:
  89              		.file 7 "/usr/arm-none-eabi/include/c++/13.2.0/cmath"
   1:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
   3:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // Copyright (C) 1997-2023 Free Software Foundation, Inc.
   4:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** //
   5:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // any later version.
  10:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
ARM GAS  /tmp/cc8IlFAo.s 			page 9


  11:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // GNU General Public License for more details.
  15:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  16:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  20:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  25:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** /** @file include/cmath
  26:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****  *
  29:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****  *  as macros in C).
  33:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****  */
  34:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  35:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** //
  36:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** //
  38:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  39:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #pragma GCC system_header
  40:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  41:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #include <bits/requires_hosted.h>
  42:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  43:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #include <bits/c++config.h>
  44:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #include <bits/cpp_type_traits.h>
  45:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #include <ext/type_traits.h>
  46:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #include_next <math.h>
  48:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  49:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #include <bits/std_abs.h>
  50:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  51:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef _GLIBCXX_CMATH
  52:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #define _GLIBCXX_CMATH 1
  53:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  54:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  55:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef div
  56:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef acos
  57:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef asin
  58:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef atan
  59:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef atan2
  60:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef ceil
  61:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef cos
  62:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef cosh
  63:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef exp
  64:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef fabs
  65:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef floor
  66:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef fmod
  67:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef frexp
ARM GAS  /tmp/cc8IlFAo.s 			page 10


  68:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef ldexp
  69:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef log
  70:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef log10
  71:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef modf
  72:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef pow
  73:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef sin
  74:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef sinh
  75:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef sqrt
  76:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef tan
  77:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #undef tanh
  78:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  79:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** extern "C++"
  80:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** {
  81:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  82:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** {
  83:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  84:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  85:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::acos;
  86:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  87:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  88:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
  89:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   acos(float __x)
  90:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_acosf(__x); }
  91:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  92:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  93:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   acos(long double __x)
  94:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_acosl(__x); }
  95:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
  96:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
  97:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
  98:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
  99:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 100:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 101:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     acos(_Tp __x)
 102:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_acos(__x); }
 103:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 104:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::asin;
 105:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 106:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 107:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 108:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   asin(float __x)
 109:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_asinf(__x); }
 110:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 111:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 112:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   asin(long double __x)
 113:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_asinl(__x); }
 114:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 115:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 116:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 117:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 118:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 119:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 120:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     asin(_Tp __x)
 121:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_asin(__x); }
 122:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 123:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::atan;
 124:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
ARM GAS  /tmp/cc8IlFAo.s 			page 11


 125:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 126:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 127:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   atan(float __x)
 128:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_atanf(__x); }
 129:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 130:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 131:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   atan(long double __x)
 132:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_atanl(__x); }
 133:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 134:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 135:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 136:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 137:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 138:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 139:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     atan(_Tp __x)
 140:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_atan(__x); }
 141:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 142:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::atan2;
 143:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 144:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 145:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 146:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   atan2(float __y, float __x)
 147:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_atan2f(__y, __x); }
 148:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 149:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 150:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   atan2(long double __y, long double __x)
 151:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_atan2l(__y, __x); }
 152:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 153:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 154:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::ceil;
 155:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 156:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 157:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 158:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   ceil(float __x)
 159:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_ceilf(__x); }
 160:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 161:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 162:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   ceil(long double __x)
 163:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_ceill(__x); }
 164:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 165:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 166:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 167:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 168:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 169:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 170:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     ceil(_Tp __x)
 171:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_ceil(__x); }
 172:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 173:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::cos;
 174:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 175:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 176:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 177:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   cos(float __x)
 178:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_cosf(__x); }
 179:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 180:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 181:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   cos(long double __x)
ARM GAS  /tmp/cc8IlFAo.s 			page 12


 182:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_cosl(__x); }
 183:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 184:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 185:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 186:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 187:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 188:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 189:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     cos(_Tp __x)
 190:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_cos(__x); }
 191:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 192:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::cosh;
 193:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 194:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 195:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 196:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   cosh(float __x)
 197:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_coshf(__x); }
 198:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 199:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 200:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   cosh(long double __x)
 201:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_coshl(__x); }
 202:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 203:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 204:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 205:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 206:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 207:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 208:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     cosh(_Tp __x)
 209:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_cosh(__x); }
 210:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 211:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::exp;
 212:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 213:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 214:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 215:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   exp(float __x)
 216:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_expf(__x); }
 217:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 218:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 219:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   exp(long double __x)
 220:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_expl(__x); }
 221:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 222:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 223:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 224:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 225:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 226:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 227:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     exp(_Tp __x)
 228:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_exp(__x); }
 229:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 230:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::fabs;
 231:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 232:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 233:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 234:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   fabs(float __x)
 235:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_fabsf(__x); }
 236:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 237:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 238:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   fabs(long double __x)
ARM GAS  /tmp/cc8IlFAo.s 			page 13


 239:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_fabsl(__x); }
 240:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 241:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 242:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 243:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 244:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 245:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 246:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     fabs(_Tp __x)
 247:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_fabs(__x); }
 248:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 249:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::floor;
 250:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 251:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 252:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 253:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   floor(float __x)
 254:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_floorf(__x); }
 255:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 256:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 257:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   floor(long double __x)
 258:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_floorl(__x); }
 259:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 260:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 261:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 262:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 263:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 264:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 265:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     floor(_Tp __x)
 266:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_floor(__x); }
 267:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 268:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::fmod;
 269:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 270:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 271:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 272:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   fmod(float __x, float __y)
 273:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_fmodf(__x, __y); }
 274:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 275:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 276:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   fmod(long double __x, long double __y)
 277:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_fmodl(__x, __y); }
 278:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 279:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 280:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::frexp;
 281:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 282:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 283:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline float
 284:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   frexp(float __x, int* __exp)
 285:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_frexpf(__x, __exp); }
 286:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 287:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline long double
 288:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   frexp(long double __x, int* __exp)
 289:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_frexpl(__x, __exp); }
 290:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 291:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 292:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 293:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 294:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 295:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
ARM GAS  /tmp/cc8IlFAo.s 			page 14


 296:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     frexp(_Tp __x, int* __exp)
 297:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_frexp(__x, __exp); }
 298:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 299:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::ldexp;
 300:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 301:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 302:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 303:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   ldexp(float __x, int __exp)
 304:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 305:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 306:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 307:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   ldexp(long double __x, int __exp)
 308:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 309:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 310:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 311:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 312:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 313:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 314:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 315:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     ldexp(_Tp __x, int __exp)
 316:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_ldexp(__x, __exp); }
 317:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 318:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::log;
 319:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 320:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 321:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 322:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   log(float __x)
 323:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_logf(__x); }
 324:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 325:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 326:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   log(long double __x)
 327:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_logl(__x); }
 328:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 329:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 330:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 331:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 332:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 333:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
 334:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     log(_Tp __x)
 335:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_log(__x); }
 336:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 337:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::log10;
 338:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 339:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 340:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 341:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   log10(float __x)
 342:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_log10f(__x); }
 343:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 344:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 345:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   log10(long double __x)
 346:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_log10l(__x); }
 347:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 348:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 349:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   template<typename _Tp>
 350:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 351:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 352:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****                                     double>::__type
ARM GAS  /tmp/cc8IlFAo.s 			page 15


 353:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     log10(_Tp __x)
 354:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****     { return __builtin_log10(__x); }
 355:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 356:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::modf;
 357:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 358:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 359:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline float
 360:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   modf(float __x, float* __iptr)
 361:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_modff(__x, __iptr); }
 362:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 363:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline long double
 364:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   modf(long double __x, long double* __iptr)
 365:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_modfl(__x, __iptr); }
 366:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 367:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 368:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::pow;
 369:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 370:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 371:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 372:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   pow(float __x, float __y)
 373:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_powf(__x, __y); }
 374:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 375:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 376:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   pow(long double __x, long double __y)
 377:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_powl(__x, __y); }
 378:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 379:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #if __cplusplus < 201103L
 380:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 381:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 382:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline double
 383:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   pow(double __x, int __i)
 384:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_powi(__x, __i); }
 385:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 386:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline float
 387:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   pow(float __x, int __n)
 388:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_powif(__x, __n); }
 389:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 390:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline long double
 391:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   pow(long double __x, int __n)
 392:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_powil(__x, __n); }
 393:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 394:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #endif
 395:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 396:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   using ::sin;
 397:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** 
 398:/usr/arm-none-eabi/include/c++/13.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 399:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 400:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   sin(float __x)
  90              		.loc 7 400 3 view .LVU14
  91              	.LBB95:
 401:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_sinf(__x); }
  92              		.loc 7 401 5 view .LVU15
  93              		.loc 7 401 5 is_stmt 0 view .LVU16
  94              	.LBE95:
  95              	.LBE94:
  30:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
  96              		.loc 1 30 3 is_stmt 1 view .LVU17
ARM GAS  /tmp/cc8IlFAo.s 			page 16


  97              	.LBB98:
  98              	.LBI98:
  99              		.file 8 "/usr/arm-none-eabi/include/c++/13.2.0/array"
   1:/usr/arm-none-eabi/include/c++/13.2.0/array **** // <array> -*- C++ -*-
   2:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
   3:/usr/arm-none-eabi/include/c++/13.2.0/array **** // Copyright (C) 2007-2023 Free Software Foundation, Inc.
   4:/usr/arm-none-eabi/include/c++/13.2.0/array **** //
   5:/usr/arm-none-eabi/include/c++/13.2.0/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/arm-none-eabi/include/c++/13.2.0/array **** // software; you can redistribute it and/or modify it under the
   7:/usr/arm-none-eabi/include/c++/13.2.0/array **** // terms of the GNU General Public License as published by the
   8:/usr/arm-none-eabi/include/c++/13.2.0/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/arm-none-eabi/include/c++/13.2.0/array **** // any later version.
  10:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  11:/usr/arm-none-eabi/include/c++/13.2.0/array **** // This library is distributed in the hope that it will be useful,
  12:/usr/arm-none-eabi/include/c++/13.2.0/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/arm-none-eabi/include/c++/13.2.0/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/arm-none-eabi/include/c++/13.2.0/array **** // GNU General Public License for more details.
  15:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  16:/usr/arm-none-eabi/include/c++/13.2.0/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/arm-none-eabi/include/c++/13.2.0/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/arm-none-eabi/include/c++/13.2.0/array **** // 3.1, as published by the Free Software Foundation.
  19:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  20:/usr/arm-none-eabi/include/c++/13.2.0/array **** // You should have received a copy of the GNU General Public License and
  21:/usr/arm-none-eabi/include/c++/13.2.0/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/arm-none-eabi/include/c++/13.2.0/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/arm-none-eabi/include/c++/13.2.0/array **** // <http://www.gnu.org/licenses/>.
  24:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  25:/usr/arm-none-eabi/include/c++/13.2.0/array **** /** @file include/array
  26:/usr/arm-none-eabi/include/c++/13.2.0/array ****  *  This is a Standard C++ Library header.
  27:/usr/arm-none-eabi/include/c++/13.2.0/array ****  */
  28:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  29:/usr/arm-none-eabi/include/c++/13.2.0/array **** #ifndef _GLIBCXX_ARRAY
  30:/usr/arm-none-eabi/include/c++/13.2.0/array **** #define _GLIBCXX_ARRAY 1
  31:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  32:/usr/arm-none-eabi/include/c++/13.2.0/array **** #pragma GCC system_header
  33:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  34:/usr/arm-none-eabi/include/c++/13.2.0/array **** #if __cplusplus < 201103L
  35:/usr/arm-none-eabi/include/c++/13.2.0/array **** # include <bits/c++0x_warning.h>
  36:/usr/arm-none-eabi/include/c++/13.2.0/array **** #else
  37:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  38:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <compare>
  39:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <initializer_list>
  40:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  41:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <type_traits>
  42:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <bits/functexcept.h>
  43:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <bits/stl_algobase.h>
  44:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <bits/range_access.h> // std::begin, std::end etc.
  45:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <bits/utility.h>      // std::index_sequence, std::tuple_size
  46:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <debug/assertions.h>
  47:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  48:/usr/arm-none-eabi/include/c++/13.2.0/array **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/arm-none-eabi/include/c++/13.2.0/array **** {
  50:/usr/arm-none-eabi/include/c++/13.2.0/array **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  52:/usr/arm-none-eabi/include/c++/13.2.0/array ****   template<typename _Tp, size_t _Nm>
  53:/usr/arm-none-eabi/include/c++/13.2.0/array ****     struct __array_traits
  54:/usr/arm-none-eabi/include/c++/13.2.0/array ****     {
ARM GAS  /tmp/cc8IlFAo.s 			page 17


  55:/usr/arm-none-eabi/include/c++/13.2.0/array ****       using _Type = _Tp[_Nm];
  56:/usr/arm-none-eabi/include/c++/13.2.0/array ****       using _Is_swappable = __is_swappable<_Tp>;
  57:/usr/arm-none-eabi/include/c++/13.2.0/array ****       using _Is_nothrow_swappable = __is_nothrow_swappable<_Tp>;
  58:/usr/arm-none-eabi/include/c++/13.2.0/array ****     };
  59:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  60:/usr/arm-none-eabi/include/c++/13.2.0/array ****  template<typename _Tp>
  61:/usr/arm-none-eabi/include/c++/13.2.0/array ****    struct __array_traits<_Tp, 0>
  62:/usr/arm-none-eabi/include/c++/13.2.0/array ****    {
  63:/usr/arm-none-eabi/include/c++/13.2.0/array ****      // Empty type used instead of _Tp[0] for std::array<_Tp, 0>.
  64:/usr/arm-none-eabi/include/c++/13.2.0/array ****      struct _Type
  65:/usr/arm-none-eabi/include/c++/13.2.0/array ****      {
  66:/usr/arm-none-eabi/include/c++/13.2.0/array ****        // Indexing is undefined.
  67:/usr/arm-none-eabi/include/c++/13.2.0/array ****        __attribute__((__always_inline__,__noreturn__))
  68:/usr/arm-none-eabi/include/c++/13.2.0/array ****        _Tp& operator[](size_t) const noexcept { __builtin_trap(); }
  69:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  70:/usr/arm-none-eabi/include/c++/13.2.0/array ****        // Conversion to a pointer produces a null pointer.
  71:/usr/arm-none-eabi/include/c++/13.2.0/array ****        __attribute__((__always_inline__))
  72:/usr/arm-none-eabi/include/c++/13.2.0/array ****        constexpr explicit operator _Tp*() const noexcept { return nullptr; }
  73:/usr/arm-none-eabi/include/c++/13.2.0/array ****      };
  74:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  75:/usr/arm-none-eabi/include/c++/13.2.0/array ****      using _Is_swappable = true_type;
  76:/usr/arm-none-eabi/include/c++/13.2.0/array ****      using _Is_nothrow_swappable = true_type;
  77:/usr/arm-none-eabi/include/c++/13.2.0/array ****    };
  78:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  79:/usr/arm-none-eabi/include/c++/13.2.0/array ****   /**
  80:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *
  82:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  @ingroup sequences
  83:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *
  84:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  <a href="tables.html#67">sequence</a>.
  87:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *
  88:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  Sets support random access iterators.
  89:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *
  90:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  @tparam  Nm  Number of elements.
  92:/usr/arm-none-eabi/include/c++/13.2.0/array ****   */
  93:/usr/arm-none-eabi/include/c++/13.2.0/array ****   template<typename _Tp, std::size_t _Nm>
  94:/usr/arm-none-eabi/include/c++/13.2.0/array ****     struct array
  95:/usr/arm-none-eabi/include/c++/13.2.0/array ****     {
  96:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef _Tp 	    			      value_type;
  97:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef value_type*			      pointer;
  98:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef const value_type*                       const_pointer;
  99:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef value_type&                   	      reference;
 100:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef const value_type&             	      const_reference;
 101:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef value_type*          		      iterator;
 102:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef const value_type*			      const_iterator;
 103:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef std::size_t                    	      size_type;
 104:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 108:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // Support for zero-sized arrays mandatory.
 109:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typename __array_traits<_Tp, _Nm>::_Type        _M_elems;
 110:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 111:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // No explicit construct/copy/destroy for aggregate type.
ARM GAS  /tmp/cc8IlFAo.s 			page 18


 112:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 113:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // DR 776.
 114:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX20_CONSTEXPR void
 115:/usr/arm-none-eabi/include/c++/13.2.0/array ****       fill(const value_type& __u)
 116:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { std::fill_n(begin(), size(), __u); }
 117:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 118:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX20_CONSTEXPR void
 119:/usr/arm-none-eabi/include/c++/13.2.0/array ****       swap(array& __other)
 120:/usr/arm-none-eabi/include/c++/13.2.0/array ****       noexcept(__array_traits<_Tp, _Nm>::_Is_nothrow_swappable::value)
 121:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 122:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 123:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // Iterators.
 124:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__gnu__::__const__, __nodiscard__]]
 125:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR iterator
 126:/usr/arm-none-eabi/include/c++/13.2.0/array ****       begin() noexcept
 127:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return iterator(data()); }
 128:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 129:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 130:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 131:/usr/arm-none-eabi/include/c++/13.2.0/array ****       begin() const noexcept
 132:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_iterator(data()); }
 133:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 134:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__gnu__::__const__, __nodiscard__]]
 135:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR iterator
 136:/usr/arm-none-eabi/include/c++/13.2.0/array ****       end() noexcept
 137:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return iterator(data() + _Nm); }
 138:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 139:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 140:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 141:/usr/arm-none-eabi/include/c++/13.2.0/array ****       end() const noexcept
 142:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_iterator(data() + _Nm); }
 143:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 144:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__gnu__::__const__, __nodiscard__]]
 145:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 146:/usr/arm-none-eabi/include/c++/13.2.0/array ****       rbegin() noexcept
 147:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return reverse_iterator(end()); }
 148:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 149:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 150:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 151:/usr/arm-none-eabi/include/c++/13.2.0/array ****       rbegin() const noexcept
 152:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_reverse_iterator(end()); }
 153:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 154:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__gnu__::__const__, __nodiscard__]]
 155:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 156:/usr/arm-none-eabi/include/c++/13.2.0/array ****       rend() noexcept
 157:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return reverse_iterator(begin()); }
 158:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 159:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 160:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 161:/usr/arm-none-eabi/include/c++/13.2.0/array ****       rend() const noexcept
 162:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_reverse_iterator(begin()); }
 163:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 164:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 165:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 166:/usr/arm-none-eabi/include/c++/13.2.0/array ****       cbegin() const noexcept
 167:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_iterator(data()); }
 168:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
ARM GAS  /tmp/cc8IlFAo.s 			page 19


 169:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 170:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 171:/usr/arm-none-eabi/include/c++/13.2.0/array ****       cend() const noexcept
 172:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_iterator(data() + _Nm); }
 173:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 174:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 175:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 176:/usr/arm-none-eabi/include/c++/13.2.0/array ****       crbegin() const noexcept
 177:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_reverse_iterator(end()); }
 178:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 179:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 180:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 181:/usr/arm-none-eabi/include/c++/13.2.0/array ****       crend() const noexcept
 182:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_reverse_iterator(begin()); }
 183:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 184:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // Capacity.
 185:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__, __gnu__::__const__, __gnu__::__always_inline__]]
 186:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr size_type
 187:/usr/arm-none-eabi/include/c++/13.2.0/array ****       size() const noexcept { return _Nm; }
 188:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 189:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__, __gnu__::__const__, __gnu__::__always_inline__]]
 190:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr size_type
 191:/usr/arm-none-eabi/include/c++/13.2.0/array ****       max_size() const noexcept { return _Nm; }
 192:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 193:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__, __gnu__::__const__, __gnu__::__always_inline__]]
 194:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr bool
 195:/usr/arm-none-eabi/include/c++/13.2.0/array ****       empty() const noexcept { return size() == 0; }
 196:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 197:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // Element access.
 198:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 199:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reference
 200:/usr/arm-none-eabi/include/c++/13.2.0/array ****       operator[](size_type __n) noexcept
 100              		.loc 8 200 7 view .LVU18
 101              		.loc 8 200 7 is_stmt 0 view .LVU19
 102              	.LBE98:
 103              	.LBE93:
 104              	.LBE92:
  25:run.cpp       **** 	for (size_t i = 0; i < (SIN_POINTS - 1); i++)
 105              		.loc 1 25 34 view .LVU20
 106 0000 70B5     		push	{r4, r5, r6, lr}
 107              		.cfi_def_cfa_offset 16
 108              		.cfi_offset 4, -16
 109              		.cfi_offset 5, -12
 110              		.cfi_offset 6, -8
 111              		.cfi_offset 14, -4
 112              	.LBB108:
 113              	.LBB102:
 114              		.loc 1 30 23 discriminator 1 view .LVU21
 115 0002 134E     		ldr	r6, .L7
 116 0004 0023     		movs	r3, #0
 117              	.LBE102:
  26:run.cpp       **** 	{
 118              		.loc 1 26 2 discriminator 3 view .LVU22
 119 0006 0124     		movs	r4, #1
 120 0008 3546     		mov	r5, r6
 121              	.LBB103:
 122              		.loc 1 30 23 discriminator 1 view .LVU23
ARM GAS  /tmp/cc8IlFAo.s 			page 20


 123 000a 3380     		strh	r3, [r6]	@ movhi
 124              	.LBE103:
  26:run.cpp       **** 	{
 125              		.loc 1 26 2 is_stmt 1 discriminator 3 view .LVU24
 126              	.LVL2:
  26:run.cpp       **** 	{
 127              		.loc 1 26 23 discriminator 1 view .LVU25
 128              	.L4:
 129              	.LBB104:
  29:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
 130              		.loc 1 29 36 is_stmt 0 view .LVU26
 131 000c 07EE904A 		vmov	s15, r4	@ int
 132 0010 9FED107A 		vldr.32	s14, .L7+4
  29:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
 133              		.loc 1 29 29 view .LVU27
 134 0014 9FED100A 		vldr.32	s0, .L7+8
 135              	.LBE104:
  26:run.cpp       **** 	{
 136              		.loc 1 26 2 discriminator 3 view .LVU28
 137 0018 0134     		adds	r4, r4, #1
 138              	.LVL3:
 139              	.LBB105:
  29:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
 140              		.loc 1 29 36 view .LVU29
 141 001a F8EEE77A 		vcvt.f32.s32	s15, s15
 142              	.LVL4:
  29:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
 143              		.loc 1 29 36 view .LVU30
 144 001e 67EE877A 		vmul.f32	s15, s15, s14
 145              	.LBB99:
 146              	.LBB96:
 147              		.loc 7 401 26 view .LVU31
 148 0022 27EE800A 		vmul.f32	s0, s15, s0
 149 0026 FFF7FEFF 		bl	sinf
 150              	.LVL5:
 151              		.loc 7 401 26 view .LVU32
 152              	.LBE96:
 153              	.LBE99:
  29:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
 154              		.loc 1 29 3 is_stmt 1 view .LVU33
 155              	.LBB100:
 400:/usr/arm-none-eabi/include/c++/13.2.0/cmath ****   { return __builtin_sinf(__x); }
 156              		.loc 7 400 3 view .LVU34
 157              	.LBB97:
 158              		.loc 7 401 5 view .LVU35
 159              		.loc 7 401 5 is_stmt 0 view .LVU36
 160              	.LBE97:
 161              	.LBE100:
 162              		.loc 1 30 3 is_stmt 1 view .LVU37
 163              	.LBB101:
 164              		.loc 8 200 7 view .LVU38
 165              		.loc 8 200 7 is_stmt 0 view .LVU39
 166              	.LBE101:
  29:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
 167              		.loc 1 29 54 discriminator 1 view .LVU40
 168 002a DFED0C7A 		vldr.32	s15, .L7+12
 169              	.LBE105:
ARM GAS  /tmp/cc8IlFAo.s 			page 21


  26:run.cpp       **** 	{
 170              		.loc 1 26 23 discriminator 1 view .LVU41
 171 002e 40F2FF13 		movw	r3, #511
 172              	.LBB106:
  29:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
 173              		.loc 1 29 54 discriminator 1 view .LVU42
 174 0032 20EE270A 		vmul.f32	s0, s0, s15
 175              	.LVL6:
  29:run.cpp       **** 		SINE_WAVE_LOOKUP[i] = static_cast<uint16_t>(v);
 176              		.loc 1 29 54 discriminator 1 view .LVU43
 177              	.LBE106:
  26:run.cpp       **** 	{
 178              		.loc 1 26 23 discriminator 1 view .LVU44
 179 0036 9C42     		cmp	r4, r3
 180              	.LBB107:
 181              		.loc 1 30 25 discriminator 1 view .LVU45
 182 0038 BCEEC00A 		vcvt.u32.f32	s0, s0
 183              	.LVL7:
 184              		.loc 1 30 25 discriminator 1 view .LVU46
 185 003c 10EE102A 		vmov	r2, s0	@ int
 186 0040 25F8022F 		strh	r2, [r5, #2]!	@ movhi
 187              	.LBE107:
  26:run.cpp       **** 	{
 188              		.loc 1 26 2 is_stmt 1 discriminator 3 view .LVU47
 189              	.LVL8:
  26:run.cpp       **** 	{
 190              		.loc 1 26 23 discriminator 1 view .LVU48
 191 0044 E2D1     		bne	.L4
 192              	.LBE108:
  31:run.cpp       **** 		// hw.PrintLine("%3d;%7d:%7.5f", i, SINE_WAVE_LOOKUP[i], v);
  32:run.cpp       **** 	}
  33:run.cpp       **** 	SINE_WAVE_LOOKUP[SIN_POINTS - 1] = 0;	
 193              		.loc 1 33 2 view .LVU49
 194              		.loc 1 33 35 is_stmt 0 discriminator 1 view .LVU50
 195 0046 0023     		movs	r3, #0
 196 0048 A6F8FE33 		strh	r3, [r6, #1022]	@ movhi
  34:run.cpp       **** }
 197              		.loc 1 34 1 view .LVU51
 198 004c 70BD     		pop	{r4, r5, r6, pc}
 199              	.LVL9:
 200              	.L8:
 201              		.loc 1 34 1 view .LVU52
 202 004e 00BF     		.align	2
 203              	.L7:
 204 0050 00000000 		.word	_ZL16SINE_WAVE_LOOKUP
 205 0054 DB0F4940 		.word	1078530011
 206 0058 0000003B 		.word	989855744
 207 005c 00F07F45 		.word	1166012416
 208              		.cfi_endproc
 209              	.LFE4816:
 211              		.section	.text._Z11store_valuettt,"ax",%progbits
 212              		.align	1
 213              		.p2align 2,,3
 214              		.global	_Z11store_valuettt
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
ARM GAS  /tmp/cc8IlFAo.s 			page 22


 219              	_Z11store_valuettt:
 220              	.LVL10:
 221              	.LFB4817:
  35:run.cpp       **** 
  36:run.cpp       **** void store_value(uint16_t u1, uint16_t u2, uint16_t u3){
 222              		.loc 1 36 56 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
  37:run.cpp       **** 	int32_t *ram = (int32_t *)0xC0000000;
 227              		.loc 1 37 2 view .LVU54
  38:run.cpp       **** 	unsigned char const *p1 = reinterpret_cast<unsigned char const *>(&u1);
 228              		.loc 1 38 2 view .LVU55
  39:run.cpp       **** 	memcpy((sizeof(uint16_t) * value_count) + ram, p1, sizeof(uint16_t));
 229              		.loc 1 39 2 view .LVU56
  36:run.cpp       **** 	int32_t *ram = (int32_t *)0xC0000000;
 230              		.loc 1 36 56 is_stmt 0 view .LVU57
 231 0000 30B4     		push	{r4, r5}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 5, -4
 235              		.loc 1 39 42 view .LVU58
 236 0002 0A4D     		ldr	r5, .L11
  40:run.cpp       **** 	value_count++;
  41:run.cpp       **** 	unsigned char const *p2 = reinterpret_cast<unsigned char const *>(&u2);
  42:run.cpp       **** 	memcpy((sizeof(uint16_t) * value_count) + ram, p2, sizeof(uint16_t));
 237              		.loc 1 42 8 view .LVU59
 238 0004 0A4B     		ldr	r3, .L11+4
  39:run.cpp       **** 	value_count++;
 239              		.loc 1 39 42 view .LVU60
 240 0006 2C68     		ldr	r4, [r5]
 241 0008 4FEAC40C 		lsl	ip, r4, #3
  43:run.cpp       **** 	value_count++;
  44:run.cpp       **** 	unsigned char const *p3 = reinterpret_cast<unsigned char const *>(&u3);
  45:run.cpp       **** 	memcpy((sizeof(uint16_t) * value_count) + ram, p3, sizeof(uint16_t));
  46:run.cpp       **** 	value_count++;
 242              		.loc 1 46 13 view .LVU61
 243 000c 0334     		adds	r4, r4, #3
  42:run.cpp       **** 	value_count++;
 244              		.loc 1 42 8 view .LVU62
 245 000e 6344     		add	r3, r3, ip
  39:run.cpp       **** 	value_count++;
 246              		.loc 1 39 8 view .LVU63
 247 0010 0CF1404C 		add	ip, ip, #-1073741824
 248              		.loc 1 46 13 view .LVU64
 249 0014 2C60     		str	r4, [r5]
  39:run.cpp       **** 	value_count++;
 250              		.loc 1 39 8 view .LVU65
 251 0016 ACF80000 		strh	r0, [ip]	@ movhi
  40:run.cpp       **** 	unsigned char const *p2 = reinterpret_cast<unsigned char const *>(&u2);
 252              		.loc 1 40 2 is_stmt 1 view .LVU66
  41:run.cpp       **** 	memcpy((sizeof(uint16_t) * value_count) + ram, p2, sizeof(uint16_t));
 253              		.loc 1 41 2 view .LVU67
 254              	.LVL11:
  42:run.cpp       **** 	value_count++;
 255              		.loc 1 42 2 view .LVU68
ARM GAS  /tmp/cc8IlFAo.s 			page 23


  42:run.cpp       **** 	value_count++;
 256              		.loc 1 42 8 is_stmt 0 view .LVU69
 257 001a A3F6F870 		subw	r0, r3, #4088
 258              	.LVL12:
  45:run.cpp       **** 	value_count++;
 259              		.loc 1 45 8 view .LVU70
 260 001e A3F57F63 		sub	r3, r3, #4080
  42:run.cpp       **** 	value_count++;
 261              		.loc 1 42 8 view .LVU71
 262 0022 0180     		strh	r1, [r0]	@ movhi
 263              	.LVL13:
  43:run.cpp       **** 	unsigned char const *p3 = reinterpret_cast<unsigned char const *>(&u3);
 264              		.loc 1 43 2 is_stmt 1 view .LVU72
  44:run.cpp       **** 	memcpy((sizeof(uint16_t) * value_count) + ram, p3, sizeof(uint16_t));
 265              		.loc 1 44 2 view .LVU73
  45:run.cpp       **** 	value_count++;
 266              		.loc 1 45 2 view .LVU74
  45:run.cpp       **** 	value_count++;
 267              		.loc 1 45 8 is_stmt 0 view .LVU75
 268 0024 1A80     		strh	r2, [r3]	@ movhi
 269              		.loc 1 46 2 is_stmt 1 view .LVU76
  47:run.cpp       **** }
 270              		.loc 1 47 1 is_stmt 0 view .LVU77
 271 0026 30BC     		pop	{r4, r5}
 272              		.cfi_restore 5
 273              		.cfi_restore 4
 274              		.cfi_def_cfa_offset 0
 275 0028 7047     		bx	lr
 276              	.L12:
 277 002a 00BF     		.align	2
 278              	.L11:
 279 002c 00000000 		.word	_ZL11value_count
 280 0030 001000C0 		.word	-1073737728
 281              		.cfi_endproc
 282              	.LFE4817:
 284              		.section	.text.unlikely._Z10read_valuej,"ax",%progbits
 285              		.align	1
 286              		.global	_Z10read_valuej
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	_Z10read_valuej:
 292              	.LFB4818:
  48:run.cpp       **** 
  49:run.cpp       **** uint16_t read_value(size_t ) {
 293              		.loc 1 49 30 is_stmt 1 view -0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299              		.cfi_endproc
 300              	.LFE4818:
 302              		.section	.rodata._Z27calculate_voltages_and_tempv.str1.4,"aMS",%progbits,1
 303              		.align	2
 304              	.LC0:
 305 0000 2534643B 		.ascii	"%4d;%1d;%6d;%2.6f;%5d#\000"
ARM GAS  /tmp/cc8IlFAo.s 			page 24


 305      2531643B 
 305      2536643B 
 305      25322E36 
 305      663B2535 
 306              		.section	.text._Z27calculate_voltages_and_tempv,"ax",%progbits
 307              		.align	1
 308              		.p2align 2,,3
 309              		.global	_Z27calculate_voltages_and_tempv
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	_Z27calculate_voltages_and_tempv:
 315              	.LFB4819:
  50:run.cpp       **** 
  51:run.cpp       **** }
  52:run.cpp       **** 
  53:run.cpp       **** void calculate_voltages_and_temp(){
 316              		.loc 1 53 35 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
  54:run.cpp       **** 	int32_t *ram = (int32_t *)0xC0000000;
 320              		.loc 1 54 2 view .LVU80
 321              	.LVL14:
  55:run.cpp       **** 	for (size_t i = 0; i < value_count; i++)
 322              		.loc 1 55 2 view .LVU81
 323              	.LBB109:
 324              		.loc 1 55 23 discriminator 1 view .LVU82
 325              	.LBE109:
  53:run.cpp       **** 	int32_t *ram = (int32_t *)0xC0000000;
 326              		.loc 1 53 35 is_stmt 0 view .LVU83
 327 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 328              		.cfi_def_cfa_offset 20
 329              		.cfi_offset 4, -20
 330              		.cfi_offset 5, -16
 331              		.cfi_offset 6, -12
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334              	.LBB120:
 335              		.loc 1 55 23 discriminator 1 view .LVU84
 336 0002 1E4E     		ldr	r6, .L25
 337              	.LBE120:
  53:run.cpp       **** 	int32_t *ram = (int32_t *)0xC0000000;
 338              		.loc 1 53 35 view .LVU85
 339 0004 85B0     		sub	sp, sp, #20
 340              		.cfi_def_cfa_offset 40
 341              	.LBB121:
 342              		.loc 1 55 23 discriminator 1 view .LVU86
 343 0006 3368     		ldr	r3, [r6]
 344 0008 A3B3     		cbz	r3, .L15
 345 000a 4FF04045 		mov	r5, #-1073741824
 346              		.loc 1 55 14 view .LVU87
 347 000e 0024     		movs	r4, #0
 348              	.LVL15:
 349              	.L18:
 350              	.LBB110:
  56:run.cpp       **** 	{
ARM GAS  /tmp/cc8IlFAo.s 			page 25


  57:run.cpp       **** 		auto v_type = i % 3;
 351              		.loc 1 57 3 is_stmt 1 view .LVU88
  58:run.cpp       **** 		v_type = v_type == 0 ? 3 : v_type;
  59:run.cpp       **** 		uint16_t result;
  60:run.cpp       **** 		unsigned char const *p = (unsigned char const *)((sizeof(uint16_t) * i) + ram);
  61:run.cpp       **** 		memcpy(&result, p, sizeof(uint16_t));
  62:run.cpp       **** 		// Calculate Voltage
  63:run.cpp       **** 		uint16_t sin_value_indes = i / 3;
  64:run.cpp       **** 		float_t v =  VEE * (result / ADC_MAX);
 352              		.loc 1 64 23 is_stmt 0 view .LVU89
 353 0010 2B88     		ldrh	r3, [r5]
  65:run.cpp       **** 		hw.PrintLine("%4d;%1d;%6d;%2.6f;%5d#", i, v_type, result, v, sin_value_indes < SIN_POINTS ? SINE_
 354              		.loc 1 65 15 discriminator 2 view .LVU90
 355 0012 0027     		movs	r7, #0
  64:run.cpp       **** 		hw.PrintLine("%4d;%1d;%6d;%2.6f;%5d#", i, v_type, result, v, sin_value_indes < SIN_POINTS ? SINE_
 356              		.loc 1 64 30 view .LVU91
 357 0014 DFED1A6A 		vldr.32	s13, .L25+4
 358              	.LBE110:
  55:run.cpp       **** 	{
 359              		.loc 1 55 23 discriminator 1 view .LVU92
 360 0018 0835     		adds	r5, r5, #8
 361              	.LBB118:
  64:run.cpp       **** 		hw.PrintLine("%4d;%1d;%6d;%2.6f;%5d#", i, v_type, result, v, sin_value_indes < SIN_POINTS ? SINE_
 362              		.loc 1 64 30 view .LVU93
 363 001a 07EE103A 		vmov	s14, r3	@ int
  57:run.cpp       **** 		v_type = v_type == 0 ? 3 : v_type;
 364              		.loc 1 57 8 view .LVU94
 365 001e 1949     		ldr	r1, .L25+8
  64:run.cpp       **** 		hw.PrintLine("%4d;%1d;%6d;%2.6f;%5d#", i, v_type, result, v, sin_value_indes < SIN_POINTS ? SINE_
 366              		.loc 1 64 11 view .LVU95
 367 0020 DFED197A 		vldr.32	s15, .L25+12
  64:run.cpp       **** 		hw.PrintLine("%4d;%1d;%6d;%2.6f;%5d#", i, v_type, result, v, sin_value_indes < SIN_POINTS ? SINE_
 368              		.loc 1 64 30 view .LVU96
 369 0024 B8EEC76A 		vcvt.f32.s32	s12, s14
  57:run.cpp       **** 		v_type = v_type == 0 ? 3 : v_type;
 370              		.loc 1 57 8 view .LVU97
 371 0028 A1FB0421 		umull	r2, r1, r1, r4
 372              		.loc 1 65 15 discriminator 1 view .LVU98
 373 002c DFF860E0 		ldr	lr, .L25+20
  57:run.cpp       **** 		v_type = v_type == 0 ? 3 : v_type;
 374              		.loc 1 57 8 view .LVU99
 375 0030 21F00102 		bic	r2, r1, #1
 376              		.loc 1 65 15 view .LVU100
 377 0034 C1F34F0C 		ubfx	ip, r1, #1, #16
  64:run.cpp       **** 		hw.PrintLine("%4d;%1d;%6d;%2.6f;%5d#", i, v_type, result, v, sin_value_indes < SIN_POINTS ? SINE_
 378              		.loc 1 64 30 view .LVU101
 379 0038 86EE267A 		vdiv.f32	s14, s12, s13
  63:run.cpp       **** 		float_t v =  VEE * (result / ADC_MAX);
 380              		.loc 1 63 32 view .LVU102
 381 003c 4808     		lsrs	r0, r1, #1
 382              	.LVL16:
 383              	.LBB111:
 384              	.LBI111:
 385              		.loc 8 200 7 is_stmt 1 view .LVU103
 386              		.loc 8 200 7 is_stmt 0 view .LVU104
 387              	.LBE111:
  57:run.cpp       **** 		v_type = v_type == 0 ? 3 : v_type;
ARM GAS  /tmp/cc8IlFAo.s 			page 26


 388              		.loc 1 57 8 view .LVU105
 389 003e 02EB5102 		add	r2, r2, r1, lsr #1
 390              	.LVL17:
  58:run.cpp       **** 		uint16_t result;
 391              		.loc 1 58 3 is_stmt 1 view .LVU106
 392              	.LBB112:
 393              	.LBB113:
  23:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  24:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
  27:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  29:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** 
  30:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  34:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     */
  38:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  40:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** 
  41:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     */
  43:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  45:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** 
  46:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     */
  49:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  51:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** 
  52:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     */
  55:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  57:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     */
  61:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  63:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     */
  68:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  70:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
  72:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
ARM GAS  /tmp/cc8IlFAo.s 			page 27


  73:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  74:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
  76:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  78:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  81:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
  84:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  86:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
  88:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  90:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
  92:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  94:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  97:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
 100:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
 102:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
 104:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
 106:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
 108:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../DaisyExamples/libDaisy//src/daisy_seed.h ****      */
 110:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     {
 113:../../DaisyExamples/libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     }
 115:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
 116:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     */
 118:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 120:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     {
 121:../../DaisyExamples/libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 394              		.loc 2 121 23 is_stmt 0 view .LVU107
 395 0042 2146     		mov	r1, r4
 396              	.LBE113:
 397              	.LBE112:
 398              		.loc 1 65 15 discriminator 1 view .LVU108
 399 0044 80B2     		uxth	r0, r0
  58:run.cpp       **** 		uint16_t result;
 400              		.loc 1 58 24 discriminator 2 view .LVU109
ARM GAS  /tmp/cc8IlFAo.s 			page 28


 401 0046 A21A     		subs	r2, r4, r2
 402              	.LVL18:
  58:run.cpp       **** 		uint16_t result;
 403              		.loc 1 58 24 discriminator 2 view .LVU110
 404              	.LBE118:
  55:run.cpp       **** 	{
 405              		.loc 1 55 2 discriminator 2 view .LVU111
 406 0048 04F10104 		add	r4, r4, #1
 407              	.LVL19:
 408              	.LBB119:
  58:run.cpp       **** 		uint16_t result;
 409              		.loc 1 58 24 discriminator 2 view .LVU112
 410 004c 08BF     		it	eq
 411 004e 0322     		moveq	r2, #3
 412              	.LVL20:
  59:run.cpp       **** 		unsigned char const *p = (unsigned char const *)((sizeof(uint16_t) * i) + ram);
 413              		.loc 1 59 3 is_stmt 1 view .LVU113
  60:run.cpp       **** 		memcpy(&result, p, sizeof(uint16_t));
 414              		.loc 1 60 3 view .LVU114
  61:run.cpp       **** 		// Calculate Voltage
 415              		.loc 1 61 3 view .LVU115
  63:run.cpp       **** 		float_t v =  VEE * (result / ADC_MAX);
 416              		.loc 1 63 3 view .LVU116
  64:run.cpp       **** 		hw.PrintLine("%4d;%1d;%6d;%2.6f;%5d#", i, v_type, result, v, sin_value_indes < SIN_POINTS ? SINE_
 417              		.loc 1 64 3 view .LVU117
 418              		.loc 1 65 15 is_stmt 0 view .LVU118
 419 0050 BCF5007F 		cmp	ip, #512
 420              		.loc 1 65 15 discriminator 1 view .LVU119
 421 0054 38BF     		it	cc
 422 0056 3EF81070 		ldrhcc	r7, [lr, r0, lsl #1]
 423              	.LBB116:
 424              	.LBB114:
 425              		.loc 2 121 23 view .LVU120
 426 005a 0C48     		ldr	r0, .L25+16
 427 005c 0297     		str	r7, [sp, #8]
 428              	.LBE114:
 429              	.LBE116:
  64:run.cpp       **** 		hw.PrintLine("%4d;%1d;%6d;%2.6f;%5d#", i, v_type, result, v, sin_value_indes < SIN_POINTS ? SINE_
 430              		.loc 1 64 11 view .LVU121
 431 005e 27EE277A 		vmul.f32	s14, s14, s15
 432              	.LVL21:
 433              		.loc 1 65 3 is_stmt 1 view .LVU122
 434              	.LBB117:
 435              	.LBI112:
 119:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     {
 436              		.loc 2 119 17 view .LVU123
 437              	.LBB115:
 438              		.loc 2 121 23 is_stmt 0 view .LVU124
 439 0062 B7EEC77A 		vcvt.f64.f32	d7, s14
 440              	.LVL22:
 441              		.loc 2 121 23 view .LVU125
 442 0066 8DED007B 		vstr.64	d7, [sp]
 443 006a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 444              	.LVL23:
 445              		.loc 2 121 23 view .LVU126
 446              	.LBE115:
 447              	.LBE117:
ARM GAS  /tmp/cc8IlFAo.s 			page 29


 448              	.LBE119:
  55:run.cpp       **** 	{
 449              		.loc 1 55 2 is_stmt 1 discriminator 2 view .LVU127
  55:run.cpp       **** 	{
 450              		.loc 1 55 23 discriminator 1 view .LVU128
 451 006e 3368     		ldr	r3, [r6]
 452 0070 A342     		cmp	r3, r4
 453 0072 CDD8     		bhi	.L18
 454              	.LVL24:
 455              	.L15:
  55:run.cpp       **** 	{
 456              		.loc 1 55 23 is_stmt 0 discriminator 1 view .LVU129
 457              	.LBE121:
  66:run.cpp       **** 	}
  67:run.cpp       **** 	value_count = 0;
 458              		.loc 1 67 2 is_stmt 1 view .LVU130
 459              		.loc 1 67 14 is_stmt 0 view .LVU131
 460 0074 0023     		movs	r3, #0
 461 0076 3360     		str	r3, [r6]
  68:run.cpp       **** }
 462              		.loc 1 68 1 view .LVU132
 463 0078 05B0     		add	sp, sp, #20
 464              		.cfi_def_cfa_offset 20
 465              		@ sp needed
 466 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 467              	.L26:
 468              		.align	2
 469              	.L25:
 470 007c 00000000 		.word	_ZL11value_count
 471 0080 00FF7F47 		.word	1199570688
 472 0084 ABAAAAAA 		.word	-1431655765
 473 0088 33335340 		.word	1079194419
 474 008c 00000000 		.word	.LC0
 475 0090 00000000 		.word	_ZL16SINE_WAVE_LOOKUP
 476              		.cfi_endproc
 477              	.LFE4819:
 479              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 480              		.align	2
 481              	.LC1:
 482 0000 444F4E45 		.ascii	"DONE\000"
 482      00
 483              		.section	.text.startup.main,"ax",%progbits
 484              		.align	1
 485              		.p2align 2,,3
 486              		.global	main
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 491              	main:
 492              	.LFB4820:
  69:run.cpp       **** 
  70:run.cpp       **** int main(void)
  71:run.cpp       **** {
 493              		.loc 1 71 1 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 104
 496              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8IlFAo.s 			page 30


  72:run.cpp       **** 	hw.Init();
 497              		.loc 1 72 2 view .LVU134
  71:run.cpp       **** 	hw.Init();
 498              		.loc 1 71 1 is_stmt 0 view .LVU135
 499 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 500              		.cfi_def_cfa_offset 24
 501              		.cfi_offset 4, -24
 502              		.cfi_offset 5, -20
 503              		.cfi_offset 6, -16
 504              		.cfi_offset 7, -12
 505              		.cfi_offset 8, -8
 506              		.cfi_offset 14, -4
 507              		.loc 1 72 9 view .LVU136
 508 0004 0021     		movs	r1, #0
  71:run.cpp       **** 	hw.Init();
 509              		.loc 1 71 1 view .LVU137
 510 0006 9AB0     		sub	sp, sp, #104
 511              		.cfi_def_cfa_offset 128
 512              		.loc 1 72 9 view .LVU138
 513 0008 4F48     		ldr	r0, .L37
  73:run.cpp       **** 	hw.SetLed(true);
  74:run.cpp       **** 
  75:run.cpp       **** 	/** Configure and Initialize the DAC */
  76:run.cpp       ****     DacHandle::Config dac_cfg;
  77:run.cpp       ****     dac_cfg.bitdepth   = DacHandle::BitDepth::BITS_12;
  78:run.cpp       ****     dac_cfg.buff_state = DacHandle::BufferState::ENABLED;
 514              		.loc 1 78 24 view .LVU139
 515 000a 0024     		movs	r4, #0
  72:run.cpp       **** 	hw.SetLed(true);
 516              		.loc 1 72 9 view .LVU140
 517 000c FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 518              	.LVL25:
  73:run.cpp       **** 	hw.SetLed(true);
 519              		.loc 1 73 2 is_stmt 1 view .LVU141
  73:run.cpp       **** 	hw.SetLed(true);
 520              		.loc 1 73 11 is_stmt 0 view .LVU142
 521 0010 0121     		movs	r1, #1
 522 0012 4D48     		ldr	r0, .L37
 523 0014 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 524              	.LVL26:
  76:run.cpp       ****     dac_cfg.bitdepth   = DacHandle::BitDepth::BITS_12;
 525              		.loc 1 76 5 is_stmt 1 view .LVU143
  77:run.cpp       ****     dac_cfg.buff_state = DacHandle::BufferState::ENABLED;
 526              		.loc 1 77 5 view .LVU144
  77:run.cpp       ****     dac_cfg.buff_state = DacHandle::BufferState::ENABLED;
 527              		.loc 1 77 24 is_stmt 0 view .LVU145
 528 0018 0123     		movs	r3, #1
  79:run.cpp       ****     dac_cfg.mode       = DacHandle::Mode::POLLING;
  80:run.cpp       ****     dac_cfg.chn        = DacHandle::Channel::ONE;
  81:run.cpp       ****     hw.dac.Init(dac_cfg);
 529              		.loc 1 81 16 view .LVU146
 530 001a 08A9     		add	r1, sp, #32
 531 001c 4B48     		ldr	r0, .L37+4
 532 001e 4C4E     		ldr	r6, .L37+8
 533 0020 4C4D     		ldr	r5, .L37+12
  77:run.cpp       ****     dac_cfg.buff_state = DacHandle::BufferState::ENABLED;
 534              		.loc 1 77 24 view .LVU147
ARM GAS  /tmp/cc8IlFAo.s 			page 31


 535 0022 CDE90B34 		strd	r3, r4, [sp, #44]
  78:run.cpp       ****     dac_cfg.mode       = DacHandle::Mode::POLLING;
 536              		.loc 1 78 5 is_stmt 1 view .LVU148
  79:run.cpp       ****     dac_cfg.mode       = DacHandle::Mode::POLLING;
 537              		.loc 1 79 5 view .LVU149
  80:run.cpp       ****     hw.dac.Init(dac_cfg);
 538              		.loc 1 80 24 is_stmt 0 view .LVU150
 539 0026 CDE90944 		strd	r4, r4, [sp, #36]
 540              		.loc 1 81 5 is_stmt 1 view .LVU151
 541              		.loc 1 81 16 is_stmt 0 view .LVU152
 542 002a FFF7FEFF 		bl	_ZN5daisy9DacHandle4InitERKNS0_6ConfigE
 543              	.LVL27:
  82:run.cpp       **** 
  83:run.cpp       **** 	AdcChannelConfig adc_config[3];
 544              		.loc 1 83 2 is_stmt 1 view .LVU153
  84:run.cpp       **** 	adc_config[0].InitSingle(seed::A6);
 545              		.loc 1 84 2 view .LVU154
 546 002e 40F20243 		movw	r3, #1026
 547              		.loc 1 84 26 is_stmt 0 discriminator 1 view .LVU155
 548 0032 0DA8     		add	r0, sp, #52
 549 0034 ADF80030 		strh	r3, [sp]	@ movhi
 550 0038 0099     		ldr	r1, [sp]
 551 003a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 552              	.LVL28:
  85:run.cpp       **** 	adc_config[1].InitSingle(seed::A5);
 553              		.loc 1 85 2 is_stmt 1 view .LVU156
 554 003e 4FF48173 		mov	r3, #258
 555              		.loc 1 85 26 is_stmt 0 discriminator 1 view .LVU157
 556 0042 0DF14500 		add	r0, sp, #69
 557 0046 ADF80430 		strh	r3, [sp, #4]	@ movhi
 558 004a 0199     		ldr	r1, [sp, #4]
 559 004c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 560              	.LVL29:
  86:run.cpp       **** 	adc_config[2].InitSingle(seed::A4);
 561              		.loc 1 86 2 is_stmt 1 view .LVU158
 562 0050 4FF4C063 		mov	r3, #1536
 563              		.loc 1 86 26 is_stmt 0 discriminator 1 view .LVU159
 564 0054 0DF15600 		add	r0, sp, #86
 565 0058 ADF80830 		strh	r3, [sp, #8]	@ movhi
 566 005c 0299     		ldr	r1, [sp, #8]
 567 005e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 568              	.LVL30:
  87:run.cpp       **** 	hw.adc.Init(adc_config, 3);
 569              		.loc 1 87 2 is_stmt 1 view .LVU160
 570              		.loc 1 87 13 is_stmt 0 view .LVU161
 571 0062 0322     		movs	r2, #3
 572 0064 0423     		movs	r3, #4
 573 0066 0DA9     		add	r1, sp, #52
 574 0068 3B48     		ldr	r0, .L37+16
 575 006a FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 576              	.LVL31:
  88:run.cpp       **** 	hw.adc.Start();
 577              		.loc 1 88 2 is_stmt 1 view .LVU162
 578              		.loc 1 88 14 is_stmt 0 view .LVU163
 579 006e 3A48     		ldr	r0, .L37+16
 580 0070 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 581              	.LVL32:
ARM GAS  /tmp/cc8IlFAo.s 			page 32


  89:run.cpp       **** 
  90:run.cpp       **** 	Switch start_button;
 582              		.loc 1 90 2 is_stmt 1 view .LVU164
 583              	.LBB145:
 584              	.LBI145:
 585              		.file 9 "../../DaisyExamples/libDaisy//src/hid/switch.h"
   1:../../DaisyExamples/libDaisy//src/hid/switch.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../DaisyExamples/libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../DaisyExamples/libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../DaisyExamples/libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../DaisyExamples/libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
   8:../../DaisyExamples/libDaisy//src/hid/switch.h **** namespace daisy
   9:../../DaisyExamples/libDaisy//src/hid/switch.h **** {
  10:../../DaisyExamples/libDaisy//src/hid/switch.h **** /** 
  11:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../DaisyExamples/libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../DaisyExamples/libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../DaisyExamples/libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../DaisyExamples/libDaisy//src/hid/switch.h **** */
  17:../../DaisyExamples/libDaisy//src/hid/switch.h **** class Switch
  18:../../DaisyExamples/libDaisy//src/hid/switch.h **** {
  19:../../DaisyExamples/libDaisy//src/hid/switch.h ****   public:
  20:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Type
  22:../../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  23:../../DaisyExamples/libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../DaisyExamples/libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  26:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  29:../../DaisyExamples/libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../DaisyExamples/libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  32:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  33:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Pull
  35:../../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  36:../../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  40:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  41:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Switch() {}
 586              		.loc 9 41 5 view .LVU165
 587              		.loc 9 41 5 is_stmt 0 view .LVU166
 588              	.LBE145:
  91:run.cpp       **** 	start_button.Init(seed::D26);
 589              		.loc 1 91 2 is_stmt 1 view .LVU167
 590 0074 40F60333 		movw	r3, #2819
 591              		.loc 1 91 19 is_stmt 0 discriminator 1 view .LVU168
 592 0078 9FED380A 		vldr.32	s0, .L37+20
 593 007c 04A8     		add	r0, sp, #16
 594 007e ADF80C30 		strh	r3, [sp, #12]	@ movhi
ARM GAS  /tmp/cc8IlFAo.s 			page 33


 595 0082 0399     		ldr	r1, [sp, #12]
 596 0084 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 597              	.LVL33:
  92:run.cpp       **** 
  93:run.cpp       **** 
  94:run.cpp       **** 	bool do_measurement = false;
 598              		.loc 1 94 2 is_stmt 1 view .LVU169
  95:run.cpp       **** 	calculate_sine_wave_lookup();
 599              		.loc 1 95 2 view .LVU170
 600              		.loc 1 95 28 is_stmt 0 view .LVU171
 601 0088 FFF7FEFF 		bl	_Z26calculate_sine_wave_lookupv
 602              	.LVL34:
  96:run.cpp       **** 
  97:run.cpp       **** 	hw.SetLed(false);
 603              		.loc 1 97 2 is_stmt 1 view .LVU172
 604              		.loc 1 97 11 is_stmt 0 view .LVU173
 605 008c 2146     		mov	r1, r4
 606 008e 2E48     		ldr	r0, .L37
 607 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 608              	.LVL35:
  98:run.cpp       **** 
  99:run.cpp       **** 	// Don't wait for Serial connection
 100:run.cpp       **** 	hw.StartLog(false);
 609              		.loc 1 100 2 is_stmt 1 view .LVU174
 610              	.LBB146:
 611              	.LBI146:
 122:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     }
 123:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
 124:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     */
 126:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 612              		.loc 2 126 17 view .LVU175
 613              	.LBB147:
 127:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     {
 128:../../DaisyExamples/libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 614              		.loc 2 128 9 view .LVU176
 615              		.loc 2 128 22 is_stmt 0 view .LVU177
 616 0094 2046     		mov	r0, r4
 617 0096 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 618              	.LVL36:
 619              	.L32:
 620              		.loc 2 128 22 view .LVU178
 621              	.LBE147:
 622              	.LBE146:
 101:run.cpp       **** 
 102:run.cpp       **** 	while (1)
 623              		.loc 1 102 2 is_stmt 1 view .LVU179
 624              	.LBB148:
 103:run.cpp       **** 	{
 104:run.cpp       **** 		start_button.Debounce();
 625              		.loc 1 104 3 view .LVU180
 626              		.loc 1 104 24 is_stmt 0 view .LVU181
 627 009a 04A8     		add	r0, sp, #16
 628 009c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 629              	.LVL37:
 105:run.cpp       **** 		do_measurement = start_button.Pressed();
 630              		.loc 1 105 3 is_stmt 1 view .LVU182
ARM GAS  /tmp/cc8IlFAo.s 			page 34


 631              	.LBB149:
 632              	.LBI149:
  42:../../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
  43:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  44:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** 
  45:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../DaisyExamples/libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../DaisyExamples/libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../DaisyExamples/libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../DaisyExamples/libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../DaisyExamples/libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../DaisyExamples/libDaisy//src/hid/switch.h ****     */
  52:../../DaisyExamples/libDaisy//src/hid/switch.h ****     void
  53:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  55:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /**
  56:../../DaisyExamples/libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../DaisyExamples/libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../DaisyExamples/libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../DaisyExamples/libDaisy//src/hid/switch.h ****     */
  60:../../DaisyExamples/libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  62:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** 
  63:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../DaisyExamples/libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../DaisyExamples/libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../DaisyExamples/libDaisy//src/hid/switch.h ****     */
  67:../../DaisyExamples/libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  69:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../DaisyExamples/libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
  71:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  72:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../DaisyExamples/libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  75:../../DaisyExamples/libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../DaisyExamples/libDaisy//src/hid/switch.h ****     }
  77:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  78:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../DaisyExamples/libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 633              		.loc 9 79 17 view .LVU183
 634              	.LBB150:
 635              		.loc 9 79 35 view .LVU184
 636              		.loc 9 79 35 is_stmt 0 view .LVU185
 637              	.LBE150:
 638              	.LBE149:
 106:run.cpp       **** 		
 107:run.cpp       **** 		if(do_measurement) {
 639              		.loc 1 107 3 is_stmt 1 view .LVU186
 640              	.LBB151:
 641 00a0 9DF81A30 		ldrb	r3, [sp, #26]	@ zero_extendqisi2
 642 00a4 FF2B     		cmp	r3, #255
 643 00a6 4AD1     		bne	.L28
 644              	.LBB152:
 108:run.cpp       **** 			hw.SetLed(true);
 645              		.loc 1 108 4 view .LVU187
 646              		.loc 1 108 13 is_stmt 0 view .LVU188
ARM GAS  /tmp/cc8IlFAo.s 			page 35


 647 00a8 0121     		movs	r1, #1
 648 00aa 2748     		ldr	r0, .L37
 649              	.LBB153:
 109:run.cpp       **** 			for(int i = 0; i < NUMBER_OF_VALUES; i++){
 650              		.loc 1 109 12 view .LVU189
 651 00ac 0024     		movs	r4, #0
 652              	.LBE153:
 108:run.cpp       **** 			hw.SetLed(true);
 653              		.loc 1 108 13 view .LVU190
 654 00ae FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 655              	.LVL38:
 656              		.loc 1 109 4 is_stmt 1 view .LVU191
 657              	.LBB160:
 658              		.loc 1 109 21 discriminator 1 view .LVU192
 659 00b2 2BE0     		b	.L31
 660              	.LVL39:
 661              	.L36:
 110:run.cpp       **** 				if(i < SIN_POINTS){
 111:run.cpp       **** 					hw.dac.WriteValue(DacHandle::Channel::ONE, SINE_WAVE_LOOKUP[i]);
 662              		.loc 1 111 23 is_stmt 0 discriminator 1 view .LVU193
 663 00b4 36F81420 		ldrh	r2, [r6, r4, lsl #1]
 664 00b8 FFF7FEFF 		bl	_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
 665              	.LVL40:
 666              	.L30:
 112:run.cpp       **** 				} else if (i == SIN_POINTS)
 113:run.cpp       **** 				{
 114:run.cpp       **** 					hw.dac.WriteValue(DacHandle::Channel::ONE, 0);
 115:run.cpp       **** 				}
 116:run.cpp       **** 				store_value(hw.adc.Get(0), hw.adc.Get(1), hw.adc.Get(2));
 667              		.loc 1 116 5 is_stmt 1 view .LVU194
 668              		.loc 1 116 16 is_stmt 0 view .LVU195
 669 00bc 0021     		movs	r1, #0
 670 00be 2648     		ldr	r0, .L37+16
 671 00c0 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 672              	.LVL41:
 673              		.loc 1 116 16 discriminator 1 view .LVU196
 674 00c4 0121     		movs	r1, #1
 675              		.loc 1 116 16 view .LVU197
 676 00c6 8046     		mov	r8, r0
 677              		.loc 1 116 16 discriminator 1 view .LVU198
 678 00c8 2348     		ldr	r0, .L37+16
 679 00ca FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 680              	.LVL42:
 681              		.loc 1 116 16 discriminator 2 view .LVU199
 682 00ce 0221     		movs	r1, #2
 683              		.loc 1 116 16 discriminator 1 view .LVU200
 684 00d0 0746     		mov	r7, r0
 685              		.loc 1 116 16 discriminator 2 view .LVU201
 686 00d2 2148     		ldr	r0, .L37+16
 687 00d4 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 688              	.LVL43:
 689              	.LBB154:
 690              	.LBB155:
  39:run.cpp       **** 	value_count++;
 691              		.loc 1 39 42 view .LVU202
 692 00d8 2968     		ldr	r1, [r5]
  42:run.cpp       **** 	value_count++;
ARM GAS  /tmp/cc8IlFAo.s 			page 36


 693              		.loc 1 42 8 view .LVU203
 694 00da 214B     		ldr	r3, .L37+24
 695              	.LBE155:
 696              	.LBE154:
 697              		.loc 1 116 16 discriminator 2 view .LVU204
 698 00dc 8446     		mov	ip, r0
 699              	.LVL44:
 700              	.LBB158:
 701              	.LBI154:
  36:run.cpp       **** 	int32_t *ram = (int32_t *)0xC0000000;
 702              		.loc 1 36 6 is_stmt 1 view .LVU205
 703              	.LBB156:
  37:run.cpp       **** 	unsigned char const *p1 = reinterpret_cast<unsigned char const *>(&u1);
 704              		.loc 1 37 2 view .LVU206
  38:run.cpp       **** 	memcpy((sizeof(uint16_t) * value_count) + ram, p1, sizeof(uint16_t));
 705              		.loc 1 38 2 view .LVU207
  39:run.cpp       **** 	value_count++;
 706              		.loc 1 39 2 view .LVU208
  39:run.cpp       **** 	value_count++;
 707              		.loc 1 39 42 is_stmt 0 view .LVU209
 708 00de CA00     		lsls	r2, r1, #3
  46:run.cpp       **** }
 709              		.loc 1 46 13 view .LVU210
 710 00e0 0331     		adds	r1, r1, #3
 711              	.LBE156:
 712              	.LBE158:
 117:run.cpp       **** 				System::DelayUs(10);
 713              		.loc 1 117 20 view .LVU211
 714 00e2 0A20     		movs	r0, #10
 109:run.cpp       **** 				if(i < SIN_POINTS){
 715              		.loc 1 109 4 discriminator 2 view .LVU212
 716 00e4 0134     		adds	r4, r4, #1
 717              	.LVL45:
 718              	.LBB159:
 719              	.LBB157:
  42:run.cpp       **** 	value_count++;
 720              		.loc 1 42 8 view .LVU213
 721 00e6 1344     		add	r3, r3, r2
  46:run.cpp       **** }
 722              		.loc 1 46 13 view .LVU214
 723 00e8 2960     		str	r1, [r5]
  39:run.cpp       **** 	value_count++;
 724              		.loc 1 39 8 view .LVU215
 725 00ea 02F14042 		add	r2, r2, #-1073741824
  42:run.cpp       **** 	value_count++;
 726              		.loc 1 42 8 view .LVU216
 727 00ee A3F6F871 		subw	r1, r3, #4088
  45:run.cpp       **** 	value_count++;
 728              		.loc 1 45 8 view .LVU217
 729 00f2 A3F57F63 		sub	r3, r3, #4080
  39:run.cpp       **** 	value_count++;
 730              		.loc 1 39 8 view .LVU218
 731 00f6 A2F80080 		strh	r8, [r2]	@ movhi
  40:run.cpp       **** 	unsigned char const *p2 = reinterpret_cast<unsigned char const *>(&u2);
 732              		.loc 1 40 2 is_stmt 1 view .LVU219
  41:run.cpp       **** 	memcpy((sizeof(uint16_t) * value_count) + ram, p2, sizeof(uint16_t));
 733              		.loc 1 41 2 view .LVU220
ARM GAS  /tmp/cc8IlFAo.s 			page 37


 734              	.LVL46:
  42:run.cpp       **** 	value_count++;
 735              		.loc 1 42 2 view .LVU221
  42:run.cpp       **** 	value_count++;
 736              		.loc 1 42 8 is_stmt 0 view .LVU222
 737 00fa 0F80     		strh	r7, [r1]	@ movhi
  43:run.cpp       **** 	unsigned char const *p3 = reinterpret_cast<unsigned char const *>(&u3);
 738              		.loc 1 43 2 is_stmt 1 view .LVU223
  44:run.cpp       **** 	memcpy((sizeof(uint16_t) * value_count) + ram, p3, sizeof(uint16_t));
 739              		.loc 1 44 2 view .LVU224
 740              	.LVL47:
  45:run.cpp       **** 	value_count++;
 741              		.loc 1 45 2 view .LVU225
  45:run.cpp       **** 	value_count++;
 742              		.loc 1 45 8 is_stmt 0 view .LVU226
 743 00fc A3F800C0 		strh	ip, [r3]	@ movhi
  46:run.cpp       **** }
 744              		.loc 1 46 2 is_stmt 1 view .LVU227
 745              	.LVL48:
  46:run.cpp       **** }
 746              		.loc 1 46 2 is_stmt 0 view .LVU228
 747              	.LBE157:
 748              	.LBE159:
 749              		.loc 1 117 5 is_stmt 1 view .LVU229
 750              		.loc 1 117 20 is_stmt 0 view .LVU230
 751 0100 FFF7FEFF 		bl	_ZN5daisy6System7DelayUsEm
 752              	.LVL49:
 109:run.cpp       **** 				if(i < SIN_POINTS){
 753              		.loc 1 109 4 is_stmt 1 discriminator 2 view .LVU231
 109:run.cpp       **** 				if(i < SIN_POINTS){
 754              		.loc 1 109 21 discriminator 1 view .LVU232
 755 0104 40F22623 		movw	r3, #550
 756 0108 9C42     		cmp	r4, r3
 757 010a 0CD0     		beq	.L35
 758              	.LVL50:
 759              	.L31:
 110:run.cpp       **** 					hw.dac.WriteValue(DacHandle::Channel::ONE, SINE_WAVE_LOOKUP[i]);
 760              		.loc 1 110 5 view .LVU233
 111:run.cpp       **** 				} else if (i == SIN_POINTS)
 761              		.loc 1 111 6 view .LVU234
 110:run.cpp       **** 					hw.dac.WriteValue(DacHandle::Channel::ONE, SINE_WAVE_LOOKUP[i]);
 762              		.loc 1 110 5 is_stmt 0 view .LVU235
 763 010c B4F5007F 		cmp	r4, #512
 111:run.cpp       **** 				} else if (i == SIN_POINTS)
 764              		.loc 1 111 23 discriminator 1 view .LVU236
 765 0110 4FF00001 		mov	r1, #0
 766 0114 0D48     		ldr	r0, .L37+4
 110:run.cpp       **** 					hw.dac.WriteValue(DacHandle::Channel::ONE, SINE_WAVE_LOOKUP[i]);
 767              		.loc 1 110 5 view .LVU237
 768 0116 CDDB     		blt	.L36
 112:run.cpp       **** 				{
 769              		.loc 1 112 12 is_stmt 1 view .LVU238
 770 0118 D0D1     		bne	.L30
 114:run.cpp       **** 				}
 771              		.loc 1 114 6 view .LVU239
 114:run.cpp       **** 				}
 772              		.loc 1 114 23 is_stmt 0 view .LVU240
ARM GAS  /tmp/cc8IlFAo.s 			page 38


 773 011a 0022     		movs	r2, #0
 774 011c 0B48     		ldr	r0, .L37+4
 775 011e 1146     		mov	r1, r2
 776 0120 FFF7FEFF 		bl	_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
 777              	.LVL51:
 778 0124 CAE7     		b	.L30
 779              	.LVL52:
 780              	.L35:
 114:run.cpp       **** 				}
 781              		.loc 1 114 23 view .LVU241
 782              	.LBE160:
 118:run.cpp       **** 			}
 119:run.cpp       **** 			
 120:run.cpp       **** 			calculate_voltages_and_temp();
 783              		.loc 1 120 4 is_stmt 1 view .LVU242
 784              		.loc 1 120 31 is_stmt 0 view .LVU243
 785 0126 FFF7FEFF 		bl	_Z27calculate_voltages_and_tempv
 786              	.LVL53:
 121:run.cpp       **** 			hw.PrintLine("DONE");
 787              		.loc 1 121 4 is_stmt 1 view .LVU244
 788              	.LBB161:
 789              	.LBI161:
 119:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     {
 790              		.loc 2 119 17 view .LVU245
 791              	.LBB162:
 121:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     }
 792              		.loc 2 121 23 is_stmt 0 view .LVU246
 793 012a 0E48     		ldr	r0, .L37+28
 794 012c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 795              	.LVL54:
 121:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     }
 796              		.loc 2 121 23 view .LVU247
 797              	.LBE162:
 798              	.LBE161:
 122:run.cpp       **** 			System::Delay(40);
 799              		.loc 1 122 4 is_stmt 1 view .LVU248
 800              		.loc 1 122 17 is_stmt 0 view .LVU249
 801 0130 2820     		movs	r0, #40
 802 0132 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 803              	.LVL55:
 123:run.cpp       **** 			hw.SetLed(false);
 804              		.loc 1 123 4 is_stmt 1 view .LVU250
 805              		.loc 1 123 13 is_stmt 0 view .LVU251
 806 0136 0021     		movs	r1, #0
 807 0138 0348     		ldr	r0, .L37
 808 013a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 809              	.LVL56:
 810              	.L28:
 811              		.loc 1 123 13 view .LVU252
 812              	.LBE152:
 813              	.LBE151:
 124:run.cpp       **** 			// Wait 5 seconds
 125:run.cpp       **** 		}
 126:run.cpp       **** 		System::Delay(1);
 814              		.loc 1 126 3 is_stmt 1 view .LVU253
 815              		.loc 1 126 16 is_stmt 0 view .LVU254
 816 013e 0120     		movs	r0, #1
ARM GAS  /tmp/cc8IlFAo.s 			page 39


 817 0140 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 818              	.LVL57:
 819              	.LBE148:
 102:run.cpp       **** 	{
 820              		.loc 1 102 2 is_stmt 1 view .LVU255
 127:run.cpp       **** 	}
 821              		.loc 1 127 2 is_stmt 0 view .LVU256
 822 0144 A9E7     		b	.L32
 823              	.L38:
 824 0146 00BF     		.align	2
 825              	.L37:
 826 0148 00000000 		.word	hw
 827 014c 20000000 		.word	hw+32
 828 0150 00000000 		.word	_ZL16SINE_WAVE_LOOKUP
 829 0154 00000000 		.word	_ZL11value_count
 830 0158 18000000 		.word	hw+24
 831 015c 00000000 		.word	0
 832 0160 001000C0 		.word	-1073737728
 833 0164 00000000 		.word	.LC1
 834              		.cfi_endproc
 835              	.LFE4820:
 837              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 838              		.align	1
 839              		.p2align 2,,3
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 844              	_GLOBAL__sub_I_hw:
 845              	.LFB5406:
 128:run.cpp       **** 	
 129:run.cpp       **** }
 846              		.loc 1 129 1 is_stmt 1 view -0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851              	.LBB181:
 852              	.LBI181:
 853              		.loc 1 129 1 view .LVU258
 854              	.LVL58:
 855              	.LBB182:
 856              	.LBB183:
 857              	.LBI183:
  21:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 858              		.loc 2 21 5 view .LVU259
 859              	.LBB184:
 860              	.LBB185:
 861              	.LBI185:
 862              		.file 10 "../../DaisyExamples/libDaisy//src/per/qspi.h"
   1:../../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
   4:../../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
   6:../../DaisyExamples/libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../DaisyExamples/libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
ARM GAS  /tmp/cc8IlFAo.s 			page 40


   9:../../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  19:../../DaisyExamples/libDaisy//src/per/qspi.h **** namespace daisy
  20:../../DaisyExamples/libDaisy//src/per/qspi.h **** {
  21:../../DaisyExamples/libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../DaisyExamples/libDaisy//src/per/qspi.h **** @{
  23:../../DaisyExamples/libDaisy//src/per/qspi.h **** */
  24:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  25:../../DaisyExamples/libDaisy//src/per/qspi.h **** /** 
  26:../../DaisyExamples/libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../DaisyExamples/libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../DaisyExamples/libDaisy//src/per/qspi.h **** */
  30:../../DaisyExamples/libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../DaisyExamples/libDaisy//src/per/qspi.h **** {
  32:../../DaisyExamples/libDaisy//src/per/qspi.h ****   public:
  33:../../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Result
  34:../../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  35:../../DaisyExamples/libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../DaisyExamples/libDaisy//src/per/qspi.h ****         ERR
  37:../../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  38:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  39:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../DaisyExamples/libDaisy//src/per/qspi.h ****          * 
  43:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../DaisyExamples/libDaisy//src/per/qspi.h ****          */
  48:../../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Status
  49:../../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  50:../../DaisyExamples/libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../DaisyExamples/libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../DaisyExamples/libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../DaisyExamples/libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  55:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  56:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../DaisyExamples/libDaisy//src/per/qspi.h ****     struct Config
  58:../../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  59:../../DaisyExamples/libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Device
  61:../../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  62:../../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../DaisyExamples/libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../DaisyExamples/libDaisy//src/per/qspi.h ****         };
ARM GAS  /tmp/cc8IlFAo.s 			page 41


  66:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  67:../../DaisyExamples/libDaisy//src/per/qspi.h ****         /** 
  68:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../DaisyExamples/libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../DaisyExamples/libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
  74:../../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Mode
  75:../../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  76:../../DaisyExamples/libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../DaisyExamples/libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../DaisyExamples/libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  80:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  81:../../DaisyExamples/libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../DaisyExamples/libDaisy//src/per/qspi.h ****         struct
  83:../../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  84:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../DaisyExamples/libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  92:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Device device;
  93:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  95:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  96:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
  97:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 101:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 103:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../DaisyExamples/libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 106:../../DaisyExamples/libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../DaisyExamples/libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 109:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../DaisyExamples/libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 113:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 115:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 116:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../DaisyExamples/libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
ARM GAS  /tmp/cc8IlFAo.s 			page 42


 123:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 125:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 126:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 132:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 134:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 135:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 142:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 144:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /**  
 145:../../DaisyExamples/libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../DaisyExamples/libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 150:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 152:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../DaisyExamples/libDaisy//src/per/qspi.h ****      */
 155:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 157:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../DaisyExamples/libDaisy//src/per/qspi.h ****      * 
 161:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../DaisyExamples/libDaisy//src/per/qspi.h ****     */
 164:../../DaisyExamples/libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 166:../../DaisyExamples/libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 863              		.loc 10 166 5 view .LVU260
 864              	.LBB186:
 865              	.LBB187:
 866              		.loc 10 166 20 is_stmt 0 view .LVU261
 867 0000 0448     		ldr	r0, .L40
 868 0002 0023     		movs	r3, #0
 869              	.LBE187:
 870              	.LBE186:
 871              	.LBE185:
 872              	.LBE184:
 873              	.LBE183:
  16:run.cpp       **** static size_t value_count = 0;
 874              		.loc 1 16 11 discriminator 1 view .LVU262
ARM GAS  /tmp/cc8IlFAo.s 			page 43


 875 0004 044A     		ldr	r2, .L40+4
 876 0006 0549     		ldr	r1, .L40+8
 877              	.LBB201:
 878              	.LBB200:
 879              	.LBB190:
 880              	.LBB189:
 881              	.LBB188:
 882              		.loc 10 166 20 view .LVU263
 883 0008 0360     		str	r3, [r0]
 884              	.LVL59:
 885              		.loc 10 166 20 view .LVU264
 886              	.LBE188:
 887              	.LBE189:
 888              	.LBE190:
 889              	.LBB191:
 890              	.LBI191:
  95:../../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 891              		.loc 6 95 5 is_stmt 1 view .LVU265
 892              	.LBB192:
 893              	.LBB193:
  95:../../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 894              		.loc 6 95 21 is_stmt 0 view .LVU266
 895 000a 4361     		str	r3, [r0, #20]
 896              	.LVL60:
  95:../../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 897              		.loc 6 95 21 view .LVU267
 898              	.LBE193:
 899              	.LBE192:
 900              	.LBE191:
 901              	.LBB194:
 902              	.LBI194:
  92:../../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 903              		.loc 5 92 5 is_stmt 1 view .LVU268
  92:../../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 904              		.loc 5 92 5 is_stmt 0 view .LVU269
 905              	.LBE194:
 906              	.LBB195:
 907              	.LBI195:
 908              		.file 11 "../../DaisyExamples/libDaisy//src/per/dac.h"
   1:../../DaisyExamples/libDaisy//src/per/dac.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../DaisyExamples/libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../DaisyExamples/libDaisy//src/per/dac.h **** 
   5:../../DaisyExamples/libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../DaisyExamples/libDaisy//src/per/dac.h **** 
   7:../../DaisyExamples/libDaisy//src/per/dac.h **** namespace daisy
   8:../../DaisyExamples/libDaisy//src/per/dac.h **** {
   9:../../DaisyExamples/libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../DaisyExamples/libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** 
  12:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../DaisyExamples/libDaisy//src/per/dac.h ****  **
  15:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../DaisyExamples/libDaisy//src/per/dac.h ****  **
  17:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
ARM GAS  /tmp/cc8IlFAo.s 			page 44


  19:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../DaisyExamples/libDaisy//src/per/dac.h ****  ***/
  21:../../DaisyExamples/libDaisy//src/per/dac.h **** class DacHandle
  22:../../DaisyExamples/libDaisy//src/per/dac.h **** {
  23:../../DaisyExamples/libDaisy//src/per/dac.h ****   public:
  24:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Result
  26:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  27:../../DaisyExamples/libDaisy//src/per/dac.h ****         OK,
  28:../../DaisyExamples/libDaisy//src/per/dac.h ****         ERR,
  29:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  30:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  31:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Channel
  33:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  34:../../DaisyExamples/libDaisy//src/per/dac.h ****         ONE,
  35:../../DaisyExamples/libDaisy//src/per/dac.h ****         TWO,
  36:../../DaisyExamples/libDaisy//src/per/dac.h ****         BOTH,
  37:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  38:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  39:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../DaisyExamples/libDaisy//src/per/dac.h ****      **
  41:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../DaisyExamples/libDaisy//src/per/dac.h ****      **
  43:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  46:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Mode
  47:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  48:../../DaisyExamples/libDaisy//src/per/dac.h ****         POLLING,
  49:../../DaisyExamples/libDaisy//src/per/dac.h ****         DMA,
  50:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  51:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  52:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  56:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  58:../../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_8,
  59:../../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_12
  60:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  61:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  62:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  65:../../DaisyExamples/libDaisy//src/per/dac.h ****         ENABLED,
  66:../../DaisyExamples/libDaisy//src/per/dac.h ****         DISABLED,
  67:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  68:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  69:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../DaisyExamples/libDaisy//src/per/dac.h ****     struct Config
  71:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  72:../../DaisyExamples/libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../DaisyExamples/libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../DaisyExamples/libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../DaisyExamples/libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
ARM GAS  /tmp/cc8IlFAo.s 			page 45


  76:../../DaisyExamples/libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  78:../../DaisyExamples/libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../DaisyExamples/libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../DaisyExamples/libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../DaisyExamples/libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  83:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  84:../../DaisyExamples/libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 909              		.loc 11 84 5 is_stmt 1 view .LVU270
 910              	.LBB196:
 911              	.LBB197:
 912              		.loc 11 84 19 is_stmt 0 view .LVU271
 913 000c 0362     		str	r3, [r0, #32]
 914              	.LVL61:
 915              		.loc 11 84 19 view .LVU272
 916              	.LBE197:
 917              	.LBE196:
 918              	.LBE195:
 919              	.LBB198:
 920              	.LBI198:
  40:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
 921              		.loc 4 40 5 is_stmt 1 view .LVU273
  40:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
 922              		.loc 4 40 5 is_stmt 0 view .LVU274
 923              	.LBE198:
 924              	.LBB199:
 925              	.LBI199:
  77:../../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 926              		.loc 3 77 5 is_stmt 1 view .LVU275
  77:../../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 927              		.loc 3 77 5 is_stmt 0 view .LVU276
 928              	.LBE199:
 929              	.LBE200:
 930              	.LBE201:
  16:run.cpp       **** static size_t value_count = 0;
 931              		.loc 1 16 11 discriminator 1 view .LVU277
 932 000e FFF7FEBF 		b	__aeabi_atexit
 933              	.LVL62:
 934              	.L41:
 935 0012 00BF     		.align	2
 936              	.L40:
 937 0014 00000000 		.word	hw
 938 0018 00000000 		.word	__dso_handle
 939 001c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 940              	.LBE182:
 941              	.LBE181:
 942              		.cfi_endproc
 943              	.LFE5406:
 945              		.section	.init_array,"aw",%init_array
 946              		.align	2
 947 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 948              		.section	.bss._ZL16SINE_WAVE_LOOKUP,"aw",%nobits
 949              		.align	2
 952              	_ZL16SINE_WAVE_LOOKUP:
 953 0000 00000000 		.space	1100
 953      00000000 
ARM GAS  /tmp/cc8IlFAo.s 			page 46


 953      00000000 
 953      00000000 
 953      00000000 
 954              		.section	.bss._ZL11value_count,"aw",%nobits
 955              		.align	2
 958              	_ZL11value_count:
 959 0000 00000000 		.space	4
 960              		.global	hw
 961              		.section	.bss.hw,"aw",%nobits
 962              		.align	2
 965              	hw:
 966 0000 00000000 		.space	60
 966      00000000 
 966      00000000 
 966      00000000 
 966      00000000 
 967              		.text
 968              	.Letext0:
 969              		.file 12 "/usr/arm-none-eabi/include/machine/_default_types.h"
 970              		.file 13 "/usr/arm-none-eabi/include/sys/_stdint.h"
 971              		.file 14 "/usr/arm-none-eabi/include/stdint.h"
 972              		.file 15 "/usr/lib/gcc/arm-none-eabi/13.2.0/include/stddef.h"
 973              		.file 16 "/usr/arm-none-eabi/include/c++/13.2.0/bits/std_abs.h"
 974              		.file 17 "/usr/arm-none-eabi/include/c++/13.2.0/cstdlib"
 975              		.file 18 "/usr/arm-none-eabi/include/c++/13.2.0/cstdint"
 976              		.file 19 "/usr/arm-none-eabi/include/c++/13.2.0/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h
 977              		.file 20 "/usr/arm-none-eabi/include/c++/13.2.0/type_traits"
 978              		.file 21 "/usr/arm-none-eabi/include/c++/13.2.0/debug/debug.h"
 979              		.file 22 "/usr/arm-none-eabi/include/c++/13.2.0/cstdarg"
 980              		.file 23 "/usr/arm-none-eabi/include/c++/13.2.0/cstdio"
 981              		.file 24 "/usr/arm-none-eabi/include/c++/13.2.0/cstring"
 982              		.file 25 "/usr/arm-none-eabi/include/c++/13.2.0/cwchar"
 983              		.file 26 "/usr/arm-none-eabi/include/c++/13.2.0/clocale"
 984              		.file 27 "/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_pair.h"
 985              		.file 28 "/usr/arm-none-eabi/include/c++/13.2.0/bits/charconv.h"
 986              		.file 29 "/usr/arm-none-eabi/include/c++/13.2.0/bits/predefined_ops.h"
 987              		.file 30 "/usr/arm-none-eabi/include/sys/_types.h"
 988              		.file 31 "/usr/arm-none-eabi/include/sys/reent.h"
 989              		.file 32 "/usr/arm-none-eabi/include/sys/lock.h"
 990              		.file 33 "/usr/arm-none-eabi/include/math.h"
 991              		.file 34 "/usr/arm-none-eabi/include/stdlib.h"
 992              		.file 35 "/usr/arm-none-eabi/include/c++/13.2.0/math.h"
 993              		.file 36 "/usr/arm-none-eabi/include/c++/13.2.0/stdlib.h"
 994              		.file 37 "../../DaisyExamples/libDaisy//src/daisy_core.h"
 995              		.file 38 "../../DaisyExamples/libDaisy//src/per/sai.h"
 996              		.file 39 "../../DaisyExamples/libDaisy//src/hid/logger_impl.h"
 997              		.file 40 "../../DaisyExamples/libDaisy//src/util/wav_format.h"
 998              		.file 41 "../../DaisyExamples/libDaisy//src/dev/max11300.h"
 999              		.file 42 "../../DaisyExamples/libDaisy//src/hid/logger.h"
 1000              		.file 43 "../../DaisyExamples/libDaisy//src/per/gpio.h"
 1001              		.file 44 "../../DaisyExamples/libDaisy//src/dev/sdram.h"
 1002              		.file 45 "/usr/lib/gcc/arm-none-eabi/13.2.0/include/stdarg.h"
 1003              		.file 46 "/usr/arm-none-eabi/include/stdio.h"
 1004              		.file 47 "/usr/arm-none-eabi/include/string.h"
 1005              		.file 48 "../../DaisyExamples/DaisySP//Source/Control/adenv.h"
 1006              		.file 49 "../../DaisyExamples/DaisySP//Source/Utility/dsp.h"
 1007              		.file 50 "/usr/arm-none-eabi/include/wchar.h"
ARM GAS  /tmp/cc8IlFAo.s 			page 47


 1008              		.file 51 "/usr/arm-none-eabi/include/locale.h"
 1009              		.file 52 "../../DaisyExamples/libDaisy//src/dev/sr_595.h"
 1010              		.file 53 "<built-in>"
ARM GAS  /tmp/cc8IlFAo.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 run.cpp
     /tmp/cc8IlFAo.s:20     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
     /tmp/cc8IlFAo.s:27     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
     /tmp/cc8IlFAo.s:27     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
     /tmp/cc8IlFAo.s:68     .text._Z26calculate_sine_wave_lookupv:00000000 $t
     /tmp/cc8IlFAo.s:75     .text._Z26calculate_sine_wave_lookupv:00000000 _Z26calculate_sine_wave_lookupv
     /tmp/cc8IlFAo.s:204    .text._Z26calculate_sine_wave_lookupv:00000050 $d
     /tmp/cc8IlFAo.s:952    .bss._ZL16SINE_WAVE_LOOKUP:00000000 _ZL16SINE_WAVE_LOOKUP
     /tmp/cc8IlFAo.s:212    .text._Z11store_valuettt:00000000 $t
     /tmp/cc8IlFAo.s:219    .text._Z11store_valuettt:00000000 _Z11store_valuettt
     /tmp/cc8IlFAo.s:279    .text._Z11store_valuettt:0000002c $d
     /tmp/cc8IlFAo.s:958    .bss._ZL11value_count:00000000 _ZL11value_count
     /tmp/cc8IlFAo.s:291    .text.unlikely._Z10read_valuej:00000000 _Z10read_valuej
     /tmp/cc8IlFAo.s:303    .rodata._Z27calculate_voltages_and_tempv.str1.4:00000000 $d
     /tmp/cc8IlFAo.s:307    .text._Z27calculate_voltages_and_tempv:00000000 $t
     /tmp/cc8IlFAo.s:314    .text._Z27calculate_voltages_and_tempv:00000000 _Z27calculate_voltages_and_tempv
     /tmp/cc8IlFAo.s:470    .text._Z27calculate_voltages_and_tempv:0000007c $d
     /tmp/cc8IlFAo.s:480    .rodata.main.str1.4:00000000 $d
     /tmp/cc8IlFAo.s:484    .text.startup.main:00000000 $t
     /tmp/cc8IlFAo.s:491    .text.startup.main:00000000 main
     /tmp/cc8IlFAo.s:826    .text.startup.main:00000148 $d
     /tmp/cc8IlFAo.s:965    .bss.hw:00000000 hw
     /tmp/cc8IlFAo.s:838    .text.startup._GLOBAL__sub_I_hw:00000000 $t
     /tmp/cc8IlFAo.s:844    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
     /tmp/cc8IlFAo.s:937    .text.startup._GLOBAL__sub_I_hw:00000014 $d
     /tmp/cc8IlFAo.s:946    .init_array:00000000 $d
     /tmp/cc8IlFAo.s:949    .bss._ZL16SINE_WAVE_LOOKUP:00000000 $d
     /tmp/cc8IlFAo.s:955    .bss._ZL11value_count:00000000 $d
     /tmp/cc8IlFAo.s:962    .bss.hw:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
sinf
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed6SetLedEb
_ZN5daisy9DacHandle4InitERKNS0_6ConfigE
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy6Switch8DebounceEv
_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
_ZNK5daisy9AdcHandle3GetEh
_ZN5daisy6System7DelayUsEm
_ZN5daisy6System5DelayEm
__aeabi_atexit
__dso_handle
